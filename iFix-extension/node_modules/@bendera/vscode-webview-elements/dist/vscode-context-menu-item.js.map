{"version":3,"file":"vscode-context-menu-item.js","sourceRoot":"","sources":["../src/vscode-context-menu-item.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,GAAG,EAAkB,IAAI,EAAE,OAAO,EAAiB,MAAM,KAAK,CAAC;AACvE,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAGjD,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,UAAU;IAArD;;QAC4B,UAAK,GAAG,EAAE,CAAC;QACX,eAAU,GAAG,EAAE,CAAC;QAChB,UAAK,GAAG,EAAE,CAAC;QACV,cAAS,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAG,CAAC,CAAC;IA+GzC,CAAC;IA7GS,WAAW;QACjB,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,WAAW,EAAE;YAC3B,MAAM,EAAE;gBACN,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;gBAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgEF;SACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;QACP,IAAI,CAAC,SAAS;YACd,CAAC,CAAC,IAAI,CAAA;;;;WAIH;YACH,CAAC,CAAC,IAAI,CAAA;;2BAEa,IAAI,CAAC,WAAW;kBACzB,IAAI,CAAC,KAAK;gBACV,CAAC,CAAC,IAAI,CAAA,uBAAuB,IAAI,CAAC,KAAK,SAAS;gBAChD,CAAC,CAAC,OAAO;kBACT,IAAI,CAAC,UAAU;gBACf,CAAC,CAAC,IAAI,CAAA,4BAA4B,IAAI,CAAC,UAAU,SAAS;gBAC1D,CAAC,CAAC,OAAO;;;WAGhB;KACN,CAAC;IACJ,CAAC;CACF,CAAA;AAnH2B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oDAAY;AACX;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yDAAiB;AAChB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oDAAY;AACV;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wDAAmB;AACnB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uDAAc;AAL5B,qBAAqB;IADjC,aAAa,CAAC,0BAA0B,CAAC;GAC7B,qBAAqB,CAoHjC;SApHY,qBAAqB","sourcesContent":["import {css, CSSResultGroup, html, nothing, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\n@customElement('vscode-context-menu-item')\r\nexport class VscodeContextMenuItem extends VscElement {\r\n  @property({type: String}) label = '';\r\n  @property({type: String}) keybinding = '';\r\n  @property({type: String}) value = '';\r\n  @property({type: Boolean}) separator = false;\r\n  @property({type: Number}) tabindex = 0;\r\n\r\n  private onItemClick() {\r\n    this.dispatchEvent(\r\n      new CustomEvent('vsc-click', {\r\n        detail: {\r\n          label: this.label,\r\n          keybinding: this.keybinding,\r\n          value: this.value || this.label,\r\n          separator: this.separator,\r\n          tabindex: this.tabindex,\r\n        },\r\n        bubbles: true,\r\n        composed: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: block;\r\n          font-family: var(--vscode-font-family);\r\n          font-size: var(--vscode-font-size);\r\n          font-weight: var(--vscode-font-weight);\r\n          line-height: 1.4em;\r\n          outline: none;\r\n          position: relative;\r\n        }\r\n\r\n        .context-menu-item {\r\n          background-color: var(--vscode-menu-background);\r\n          color: var(--vscode-menu-foreground);\r\n          border: 1px solid transparent;\r\n          display: flex;\r\n          user-select: none;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        .rule {\r\n          border-bottom: 1px solid var(--vscode-menu-separatorBackground);\r\n          display: block;\r\n          margin: 0 0.8em 0.2em;\r\n          opacity: 0.4;\r\n          padding-top: 0.2em;\r\n          width: 100%;\r\n        }\r\n\r\n        .context-menu-item a {\r\n          align-items: center;\r\n          color: var(--vscode-menu-foreground);\r\n          cursor: default;\r\n          display: flex;\r\n          flex: 1 1 auto;\r\n          height: 2em;\r\n          outline: none;\r\n          position: relative;\r\n          text-decoration: inherit;\r\n        }\r\n\r\n        .context-menu-item a:hover,\r\n        :host-context(:focus) .context-menu-item a {\r\n          background-color: var(--vscode-menu-selectionBackground);\r\n          color: var(--vscode-menu-selectionForeground);\r\n        }\r\n\r\n        .label {\r\n          background: none;\r\n          display: flex;\r\n          flex: 1 1 auto;\r\n          font-size: 12px;\r\n          line-height: 1;\r\n          padding: 0 2em;\r\n          text-decoration: none;\r\n        }\r\n\r\n        .keybinding {\r\n          display: block;\r\n          flex: 2 1 auto;\r\n          line-height: 1;\r\n          padding: 0 2em;\r\n          text-align: right;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    return html`\r\n      ${this.separator\r\n        ? html`\r\n            <div class=\"context-menu-item separator\">\r\n              <span class=\"rule\"></span>\r\n            </div>\r\n          `\r\n        : html`\r\n            <div class=\"context-menu-item\">\r\n              <a @click=\"${this.onItemClick}\">\r\n                ${this.label\r\n                  ? html`<span class=\"label\">${this.label}</span>`\r\n                  : nothing}\r\n                ${this.keybinding\r\n                  ? html`<span class=\"keybinding\">${this.keybinding}</span>`\r\n                  : nothing}\r\n              </a>\r\n            </div>\r\n          `}\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-context-menu-item': VscodeContextMenuItem;\r\n  }\r\n}\r\n"]}