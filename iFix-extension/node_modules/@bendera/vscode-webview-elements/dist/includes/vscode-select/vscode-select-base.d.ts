import { CSSResultGroup, TemplateResult } from 'lit';
import '../../vscode-button';
import { InternalOption, Option, SearchMethod } from './types';
import { VscElement } from '../VscElement';
interface OptionListStat {
    selectedIndexes: number[];
    values: string[];
}
/**
 * @cssprop --dropdown-z-index - workaround for dropdown z-index issues
 */
export declare class VscodeSelectBase extends VscElement {
    ariaExpanded: string;
    combobox: boolean;
    dataCloak: boolean;
    /**
     * Filter method
     *
     * @attr [filter=fuzzy]
     * @type {"fuzzy"|"contains"|"startsWith"|"startsWithPerTerm"}
     */
    set filter(val: string);
    get filter(): string;
    focused: boolean;
    /**
     * @attr [options=[]]
     * @type {Option[]}
     */
    set options(opts: Option[]);
    get options(): Option[];
    tabindex: number;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected _activeIndex: number;
    protected _currentDescription: string;
    protected _filter: SearchMethod;
    protected get _filteredOptions(): InternalOption[];
    protected _filterPattern: string;
    protected _selectedIndex: number;
    protected _selectedIndexes: number[];
    protected _showDropdown: boolean;
    protected _options: InternalOption[];
    protected _value: string;
    protected _values: string[];
    protected _listScrollTop: number;
    protected _mainSlot: HTMLSlotElement;
    private _listElement;
    protected _multiple: boolean;
    private _isHoverForbidden;
    protected get _currentOptions(): InternalOption[];
    protected _addOptionsFromSlottedElements(): OptionListStat;
    protected _toggleDropdown(visible: boolean): Promise<void>;
    protected _dispatchChangeEvent(): void;
    protected _onFaceClick(): void;
    protected _onClickOutside(event: MouseEvent): void;
    protected _onClickOutsideBound: (event: MouseEvent) => void;
    private _onMouseMove;
    private _onMouseMoveBound;
    private _toggleComboboxDropdown;
    protected _onComboboxButtonClick(): void;
    protected _onComboboxButtonKeyDown(ev: KeyboardEvent): void;
    protected _onOptionMouseOver(ev: MouseEvent): void;
    protected _onEnterKeyDown(): void;
    private _onSpaceKeyDown;
    private _scrollActiveElementToTop;
    private _adjustOptionListScrollPos;
    protected _onArrowUpKeyDown(): void;
    protected _onArrowDownKeyDown(): void;
    private _onComponentKeyDown;
    private _onComponentFocus;
    private _onComponentBlur;
    protected _onSlotChange(): void;
    protected _onComboboxInputFocus(ev: FocusEvent): void;
    protected _onComboboxInputInput(ev: InputEvent): void;
    protected _renderOptions(): TemplateResult | TemplateResult[];
    private _renderDescription;
    protected _renderSelectFace(): TemplateResult;
    protected _renderComboboxFace(): TemplateResult;
    protected _renderDropdownControls(): TemplateResult;
    private _renderDropdown;
    static get styles(): CSSResultGroup;
    render(): TemplateResult;
}
export {};
//# sourceMappingURL=vscode-select-base.d.ts.map