import { TemplateResult } from 'lit';
import { VscodeSelectBase } from './includes/vscode-select/vscode-select-base';
/**
 * ## Types
 *
 * ```typescript
 *interface Option {
 *  label: string;
 *  value: string;
 *  description: string;
 *  selected: boolean;
 *  disabled: boolean;
 *}
 * ```
 * @attr name - Name which is used as a variable name in the data of the form-container.
 */
export declare class VscodeSingleSelect extends VscodeSelectBase {
    role: string;
    set selectedIndex(val: number);
    get selectedIndex(): number;
    set value(val: string);
    get value(): string;
    private _labelText;
    private updateInputValue;
    constructor();
    protected _onSlotChange(): void;
    protected _onArrowUpKeyDown(): void;
    protected _onArrowDownKeyDown(): void;
    protected _onEnterKeyDown(): void;
    private _onOptionClick;
    private _renderLabel;
    protected _renderSelectFace(): TemplateResult;
    protected _renderComboboxFace(): TemplateResult;
    protected _renderOptions(): TemplateResult;
}
declare global {
    interface HTMLElementTagNameMap {
        'vscode-single-select': VscodeSingleSelect;
    }
}
//# sourceMappingURL=vscode-single-select.d.ts.map