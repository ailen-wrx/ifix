{"version":3,"file":"vscode-icon.js","sourceRoot":"","sources":["../src/vscode-icon.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport {ifDefined} from 'lit/directives/if-defined.js';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\n@customElement('vscode-icon')\r\nexport class VscodeIcon extends VscElement {\r\n  /**\r\n   * Codicon icon name. @see https://microsoft.github.io/vscode-codicons/dist/codicon.html\r\n   */\r\n  @property({type: String}) name = '';\r\n\r\n  /**\r\n   * Icon size in pixels\r\n   */\r\n  @property({type: Number}) size = 16;\r\n\r\n  /**\r\n   * Enable rotation animation\r\n   */\r\n  @property({type: Boolean}) spin = false;\r\n\r\n  /**\r\n   * Animation duration in seconds\r\n   */\r\n  @property({type: Number, attribute: 'spin-duration'}) spinDuration = 1.5;\r\n\r\n  @property({type: Boolean, attribute: 'action-icon'})\r\n  set actionIcon(val: boolean) {\r\n    this._actionIcon = val;\r\n\r\n    if (val) {\r\n      if (!this.hasAttribute('role')) {\r\n        this.setAttribute('role', 'button');\r\n      }\r\n    } else {\r\n      if (this.hasAttribute('role') && this.getAttribute('role') === 'button') {\r\n        this.removeAttribute('role');\r\n      }\r\n    }\r\n  }\r\n  get actionIcon(): boolean {\r\n    return this._actionIcon;\r\n  }\r\n\r\n  private _actionIcon = false;\r\n\r\n  private _getStylesheetConfig(): {\r\n    href: string | undefined;\r\n    nonce: string | undefined;\r\n  } {\r\n    const linkElement = document.getElementById('vscode-codicon-stylesheet');\r\n    const href = linkElement?.getAttribute('href') || undefined;\r\n    const nonce = linkElement?.getAttribute('nonce') || undefined;\r\n\r\n    return {nonce, href};\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          color: var(--vscode-icon-foreground);\r\n          display: inline-block;\r\n        }\r\n\r\n        .codicon[class*='codicon-'] {\r\n          display: block;\r\n        }\r\n\r\n        .wrapper {\r\n          display: block;\r\n        }\r\n\r\n        :host([action-icon]) .wrapper {\r\n          border-radius: 5px;\r\n          cursor: pointer;\r\n          padding: 3px;\r\n        }\r\n\r\n        :host([action-icon]) .wrapper:hover {\r\n          background-color: var(--vscode-toolbar-hoverBackground);\r\n        }\r\n\r\n        :host([action-icon]) .wrapper:active {\r\n          background-color: var(--vscode-toolbar-activeBackground);\r\n        }\r\n\r\n        :host([action-icon]:focus) {\r\n          outline: none;\r\n        }\r\n\r\n        :host([action-icon]:focus-visible) {\r\n          outline: 1px solid var(--vscode-focusBorder);\r\n          outline-offset: -1px;\r\n        }\r\n\r\n        @keyframes icon-spin {\r\n          100% {\r\n            transform: rotate(360deg);\r\n          }\r\n        }\r\n\r\n        .spin {\r\n          animation-name: icon-spin;\r\n          animation-timing-function: linear;\r\n          animation-iteration-count: infinite;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    const {href, nonce} = this._getStylesheetConfig();\r\n\r\n    return html`\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"${ifDefined(href)}\"\r\n        nonce=\"${ifDefined(nonce)}\"\r\n      />\r\n      <span class=\"wrapper\">\r\n        <span\r\n          class=\"${classMap({\r\n            codicon: true,\r\n            ['codicon-' + this.name]: true,\r\n            spin: this.spin,\r\n          })}\"\r\n          style=\"${styleMap({\r\n            animationDuration: String(this.spinDuration) + 's',\r\n            fontSize: this.size + 'px',\r\n            height: this.size + 'px',\r\n            width: this.size + 'px',\r\n          })}\"\r\n        ></span>\r\n      </span>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-icon': VscodeIcon;\r\n  }\r\n}\r\n"]}