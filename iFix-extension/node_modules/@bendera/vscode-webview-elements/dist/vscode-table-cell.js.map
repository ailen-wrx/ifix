{"version":3,"file":"vscode-table-cell.js","sourceRoot":"","sources":["../src/vscode-table-cell.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAE,GAAG,EAAkB,OAAO,EAAiB,MAAM,KAAK,CAAC;AACvE,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAGjD,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,UAAU;IAA/C;;QAEE,SAAI,GAAG,MAAM,CAAC;QAEd;;WAEG;QAEH,gBAAW,GAAG,EAAE,CAAC;QAEjB;;WAEG;QAEH,YAAO,GAAG,KAAK,CAAC;IAoElB,CAAC;IAlEC,MAAM,KAAK,MAAM;QACf,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA6CF;SACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW;YACzC,CAAC,CAAC,IAAI,CAAA;YACA,IAAI,CAAC,WAAW;eACb;YACT,CAAC,CAAC,OAAO,CAAC;QAEZ,OAAO,IAAI,CAAA;;UAEL,kBAAkB;;;KAGvB,CAAC;IACJ,CAAC;CACF,CAAA;AAhFC;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;6CACZ;AAMd;IADC,QAAQ,EAAE;oDACM;AAMjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;gDACzB;AAdL,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAkF3B;SAlFY,eAAe","sourcesContent":["import {html, css, TemplateResult, nothing, CSSResultGroup} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\n@customElement('vscode-table-cell')\r\nexport class VscodeTableCell extends VscElement {\r\n  @property({reflect: true})\r\n  role = 'cell';\r\n\r\n  /**\r\n   * Cell label in the compact view of the responsive mode. For internal use only.\r\n   */\r\n  @property()\r\n  columnLabel = '';\r\n\r\n  /**\r\n   * Enable compact view in the responsive mode. For internal use only.\r\n   */\r\n  @property({type: Boolean, reflect: true})\r\n  compact = false;\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          box-sizing: border-box;\r\n          display: table-cell;\r\n          height: 24px;\r\n          overflow: hidden;\r\n          padding-left: 10px;\r\n          text-overflow: ellipsis;\r\n          vertical-align: middle;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        :host([compact]) {\r\n          display: block;\r\n          height: auto;\r\n          padding-bottom: 5px;\r\n          width: 100% !important;\r\n        }\r\n\r\n        :host([compact]:first-child) {\r\n          padding-top: 10px;\r\n        }\r\n\r\n        :host-context(vscode-table[bordered][compact]) {\r\n          border: 0;\r\n        }\r\n\r\n        :host([compact]:last-child) {\r\n          padding-bottom: 10px;\r\n        }\r\n\r\n        :host-context(vscode-table[bordered]) {\r\n          border-bottom: 1px solid var(--vscode-editorGroup-border);\r\n        }\r\n\r\n        .wrapper {\r\n          overflow: inherit;\r\n          text-overflow: inherit;\r\n          white-space: inherit;\r\n          width: 100%;\r\n        }\r\n\r\n        .column-label {\r\n          font-weight: bold;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    const columnLabelElement = this.columnLabel\r\n      ? html`<div class=\"column-label\" role=\"presentation\">\r\n          ${this.columnLabel}\r\n        </div>`\r\n      : nothing;\r\n\r\n    return html`\r\n      <div class=\"wrapper\">\r\n        ${columnLabelElement}\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-table-cell': VscodeTableCell;\r\n  }\r\n}\r\n"]}