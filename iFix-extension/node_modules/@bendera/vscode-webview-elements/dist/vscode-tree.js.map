{"version":3,"file":"vscode-tree.js","sourceRoot":"","sources":["../src/vscode-tree.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, CSSResultGroup, html, nothing, TemplateResult} from 'lit';\r\nimport {customElement, property, state} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport {VscElement} from './includes/VscElement';\r\nimport './vscode-icon';\r\n\r\nenum KeyName {\r\n  ARROW_DOWN = 'ArrowDown',\r\n  ARROW_UP = 'ArrowUp',\r\n  ENTER = 'Enter',\r\n  ESCAPE = 'Escape',\r\n  SPACE = ' ',\r\n}\r\n\r\ninterface TreeItemIconConfig {\r\n  branch?: string;\r\n  open?: string;\r\n  leaf?: string;\r\n}\r\n\r\ninterface TreeItem {\r\n  label: string;\r\n  subItems?: TreeItem[];\r\n  open?: boolean;\r\n  selected?: boolean;\r\n  focused?: boolean;\r\n  icons?: TreeItemIconConfig;\r\n  value?: string;\r\n  path?: number[];\r\n}\r\n\r\nenum ItemType {\r\n  BRANCH = 'branch',\r\n  LEAF = 'leaf',\r\n}\r\n\r\ninterface SelectEventDetail {\r\n  icons: TreeItemIconConfig | undefined;\r\n  itemType: ItemType;\r\n  label: string;\r\n  open: boolean;\r\n  value: string;\r\n  path: string; // ex.: 0/0/1\r\n}\r\n\r\nconst ARROW_OUTER_WIDTH = 18;\r\n\r\nconst mapData = (tree: TreeItem[], prevPath: number[] = []): TreeItem[] => {\r\n  const nextTree: TreeItem[] = [];\r\n\r\n  tree.forEach((val, index) => {\r\n    const {label, subItems, open, selected, focused, icons, value} = val;\r\n    const path = [...prevPath, index];\r\n    const nextItem: TreeItem = {\r\n      label,\r\n      path,\r\n      open: !!open,\r\n      selected: !!selected,\r\n      focused: !!focused,\r\n      icons: {...icons},\r\n      value,\r\n    };\r\n\r\n    if (subItems) {\r\n      nextItem.subItems = mapData(subItems, path);\r\n    }\r\n\r\n    nextTree.push(nextItem);\r\n  });\r\n\r\n  return nextTree;\r\n};\r\n/**\r\n * ## Type definitions\r\n *\r\n * ```typescript\r\n * type ItemType = 'branch' | 'leaf';\r\n *\r\n * interface TreeItemIconConfig {\r\n *   branch?: string;\r\n *   open?: string;\r\n *   leaf?: string;\r\n * }\r\n *\r\n * interface TreeItem {\r\n *   label: string;\r\n *   subItems?: TreeItem[];\r\n *   open?: boolean;\r\n *   selected?: boolean;\r\n *   focused?: boolean;\r\n *   icons?: TreeItemIconConfig;\r\n *\r\n *   // If it's not defined the value will be equal to the label\r\n *   value?: string;\r\n *\r\n *   // Item path in the tree. For example [0,0,1] means:\r\n *   // tree[0].subItems[0].subItems[1]\r\n *   path?: number[];\r\n * }\r\n *\r\n * interface SelectEventDetail {\r\n *   icons: TreeItemIconConfig | undefined;\r\n *   itemType: ItemType;\r\n *   label: string;\r\n *   open: boolean;\r\n *   value: string;\r\n *   path: string; // ex.: 0/0/1\r\n * }\r\n * ```\r\n */\r\n@customElement('vscode-tree')\r\nexport class VscodeTree extends VscElement {\r\n  @property({type: Array, reflect: false})\r\n  set data(val: TreeItem[]) {\r\n    const oldVal = this._data;\r\n\r\n    this._data = mapData(val);\r\n    this.requestUpdate('data', oldVal);\r\n  }\r\n  get data(): TreeItem[] {\r\n    return this._data;\r\n  }\r\n\r\n  @property({type: Number}) indent = 8;\r\n  @property({type: Boolean}) arrows = false;\r\n  @property({type: Boolean}) multiline = false;\r\n  @property({type: Number, reflect: true}) tabindex = 0;\r\n\r\n  private _data: TreeItem[] = [];\r\n\r\n  @state()\r\n  private _selectedItem: TreeItem | null = null;\r\n\r\n  @state()\r\n  private _focusedItem: TreeItem | null = null;\r\n\r\n  private getItemByPath(path: number[]): TreeItem | null {\r\n    let current: TreeItem[] = this._data;\r\n    let item: TreeItem | null = null;\r\n\r\n    path.forEach((el, i) => {\r\n      if (i === path.length - 1) {\r\n        item = current[el];\r\n      } else {\r\n        current = current[el].subItems as TreeItem[];\r\n      }\r\n    });\r\n\r\n    return item;\r\n  }\r\n\r\n  private getItemType(item: TreeItem): ItemType {\r\n    if (\r\n      item.subItems &&\r\n      Array.isArray(item.subItems) &&\r\n      item.subItems.length > 0\r\n    ) {\r\n      return ItemType.BRANCH;\r\n    }\r\n\r\n    return ItemType.LEAF;\r\n  }\r\n\r\n  private getIconName(element: TreeItem): string | undefined {\r\n    if (!element.icons) {\r\n      return undefined;\r\n    }\r\n\r\n    const {icons} = element;\r\n    const itemType = this.getItemType(element);\r\n    const isOpen = element.open || false;\r\n\r\n    if (itemType === ItemType.BRANCH && isOpen) {\r\n      return icons.open || undefined;\r\n    } else if (itemType === ItemType.BRANCH && !isOpen) {\r\n      return icons.branch || undefined;\r\n    } else if (itemType === ItemType.LEAF) {\r\n      return icons.leaf || undefined;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private renderTreeItem({\r\n    indentLevel,\r\n    label,\r\n    path,\r\n    iconName,\r\n    open = false,\r\n    itemType,\r\n    selected = false,\r\n    focused = false,\r\n    subItems,\r\n  }: {\r\n    indentLevel: number;\r\n    label: string;\r\n    path: number[];\r\n    iconName: string | undefined;\r\n    open: boolean;\r\n    itemType: ItemType;\r\n    selected: boolean;\r\n    focused: boolean;\r\n    subItems: TreeItem[];\r\n  }) {\r\n    const arrowIconName = open ? 'chevron-down' : 'chevron-right';\r\n    const contentsClasses = ['contents'];\r\n    const liClasses = open ? ['open'] : [];\r\n    const indentSize = indentLevel * this.indent;\r\n    const padLeft =\r\n      this.arrows && itemType === ItemType.LEAF\r\n        ? ARROW_OUTER_WIDTH + indentSize\r\n        : indentSize;\r\n    const arrowMarkup =\r\n      this.arrows && itemType === ItemType.BRANCH\r\n        ? html`<vscode-icon\r\n            name=\"${arrowIconName}\"\r\n            class=\"icon-arrow\"\r\n          ></vscode-icon>`\r\n        : nothing;\r\n    const iconMarkup = iconName\r\n      ? html`<vscode-icon name=\"${iconName}\" class=\"label-icon\"></vscode-icon>`\r\n      : nothing;\r\n    const subTreeMarkup =\r\n      open && itemType === ItemType.BRANCH\r\n        ? html`<ul>\r\n            ${this.renderTree(subItems, path)}\r\n          </ul>`\r\n        : nothing;\r\n    const labelMarkup = html`<span class=\"label\">${label}</span>`;\r\n\r\n    liClasses.push(itemType === ItemType.LEAF ? 'leaf' : 'branch');\r\n\r\n    if (selected) {\r\n      contentsClasses.push('selected');\r\n    }\r\n\r\n    if (focused) {\r\n      contentsClasses.push('focused');\r\n    }\r\n\r\n    return html`\r\n      <li data-path=\"${path.join('/')}\" class=\"${liClasses.join(' ')}\">\r\n        <span\r\n          class=\"${contentsClasses.join(' ')}\"\r\n          style=\"${styleMap({paddingLeft: `${padLeft}px`})}\"\r\n        >\r\n          ${arrowMarkup} ${iconMarkup} ${labelMarkup}\r\n        </span>\r\n        ${subTreeMarkup}\r\n      </li>\r\n    `;\r\n  }\r\n\r\n  private renderTree(tree: TreeItem[], oldPath: number[] = []) {\r\n    const ret: TemplateResult[] = [];\r\n\r\n    if (!tree) {\r\n      return nothing;\r\n    }\r\n\r\n    tree.forEach((element, index) => {\r\n      const path = [...oldPath, index];\r\n      const indentLevel = path.length - 1;\r\n      const itemType = this.getItemType(element);\r\n      const iconName = this.getIconName(element);\r\n      const {\r\n        label,\r\n        open = false,\r\n        selected = false,\r\n        focused = false,\r\n        subItems = [],\r\n      } = element;\r\n\r\n      if (selected) {\r\n        this._selectedItem = element;\r\n      }\r\n\r\n      if (focused) {\r\n        this._focusedItem = element;\r\n      }\r\n\r\n      ret.push(\r\n        this.renderTreeItem({\r\n          indentLevel,\r\n          label,\r\n          path,\r\n          open,\r\n          iconName,\r\n          itemType,\r\n          selected,\r\n          focused,\r\n          subItems,\r\n        })\r\n      );\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n  private toggleSubTreeOpen(item: TreeItem) {\r\n    if (!item.subItems) {\r\n      return;\r\n    }\r\n\r\n    item.open = !item.open;\r\n  }\r\n\r\n  private selectTreeItem(item: TreeItem) {\r\n    if (this._selectedItem) {\r\n      this._selectedItem.selected = false;\r\n    }\r\n\r\n    this._selectedItem = item;\r\n    item.selected = true;\r\n  }\r\n\r\n  private focusTreeItem(item: TreeItem) {\r\n    if (this._focusedItem) {\r\n      this._focusedItem.focused = false;\r\n    }\r\n\r\n    this._focusedItem = item;\r\n    item.focused = true;\r\n  }\r\n\r\n  private closeSubTreeRecursively(tree: TreeItem[]) {\r\n    tree.forEach((item) => {\r\n      item.open = false;\r\n\r\n      if (item.subItems && item.subItems.length > 0) {\r\n        this.closeSubTreeRecursively(item.subItems);\r\n      }\r\n    });\r\n  }\r\n\r\n  private emitSelectEvent(item: TreeItem, path: string) {\r\n    const {icons, label, open, value} = item;\r\n    const detail = {\r\n      icons,\r\n      itemType: this.getItemType(item),\r\n      label,\r\n      open: open || false,\r\n      value: value || label,\r\n      path,\r\n    };\r\n\r\n    this.dispatchEvent(\r\n      new CustomEvent<SelectEventDetail>('vsc-select', {\r\n        bubbles: true,\r\n        composed: true,\r\n        detail,\r\n      })\r\n    );\r\n  }\r\n\r\n  private _focusItem(item: TreeItem) {\r\n    if (this._focusedItem) {\r\n      this._focusedItem.focused = false;\r\n    }\r\n\r\n    this._focusedItem = item;\r\n    this._focusedItem.focused = true;\r\n  }\r\n\r\n  private _focusPrevItem() {\r\n    if (!this._focusedItem) {\r\n      this._focusItem(this._data[0]);\r\n      return;\r\n    }\r\n\r\n    const {path} = this._focusedItem;\r\n\r\n    if (path && path?.length > 0) {\r\n      const currentItemIndex = path[path.length - 1];\r\n      const hasParent = path!.length > 1;\r\n\r\n      if (currentItemIndex > 0) {\r\n        const newPath = [...path];\r\n        newPath[newPath.length - 1] = currentItemIndex - 1;\r\n\r\n        const prevSibling = this.getItemByPath(newPath) as TreeItem;\r\n        let newFocusedItem = prevSibling;\r\n\r\n        if (prevSibling?.open && prevSibling.subItems?.length) {\r\n          const {subItems} = prevSibling;\r\n          newFocusedItem = subItems[subItems.length - 1];\r\n        }\r\n\r\n        this._focusItem(newFocusedItem);\r\n      } else {\r\n        if (hasParent) {\r\n          const newPath = [...path];\r\n          newPath.pop();\r\n\r\n          this._focusItem(this.getItemByPath(newPath) as TreeItem);\r\n        }\r\n      }\r\n    } else {\r\n      this._focusItem(this._data[0]);\r\n    }\r\n  }\r\n\r\n  private _focusNextItem() {\r\n    if (!this._focusedItem) {\r\n      this._focusItem(this._data[0]);\r\n      return;\r\n    }\r\n\r\n    const {path, open} = this._focusedItem;\r\n\r\n    if (\r\n      open &&\r\n      Array.isArray(this._focusedItem.subItems) &&\r\n      this._focusedItem.subItems.length > 0\r\n    ) {\r\n      this._focusItem(this._focusedItem.subItems[0]);\r\n      return;\r\n    }\r\n\r\n    const nextPath = [...(path as number[])];\r\n    nextPath[nextPath.length - 1] += 1;\r\n\r\n    let nextFocusedItem = this.getItemByPath(nextPath);\r\n\r\n    if (nextFocusedItem) {\r\n      this._focusItem(nextFocusedItem);\r\n    } else {\r\n      nextPath.pop();\r\n\r\n      if (nextPath.length > 0) {\r\n        nextPath[nextPath.length - 1] += 1;\r\n        nextFocusedItem = this.getItemByPath(nextPath);\r\n\r\n        if (nextFocusedItem) {\r\n          this._focusItem(nextFocusedItem);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private onComponentClick(event: MouseEvent) {\r\n    const composedPath = event.composedPath();\r\n    const targetElement = composedPath.find(\r\n      (el: EventTarget) =>\r\n        (el as HTMLElement).tagName &&\r\n        (el as HTMLElement).tagName.toUpperCase() === 'LI'\r\n    );\r\n\r\n    if (targetElement) {\r\n      const pathStr = (targetElement as HTMLLIElement).dataset.path || '';\r\n      const path = pathStr.split('/').map((el) => Number(el));\r\n      const item = this.getItemByPath(path) as TreeItem;\r\n\r\n      this.toggleSubTreeOpen(item);\r\n      this.selectTreeItem(item);\r\n      this.focusTreeItem(item);\r\n      this.emitSelectEvent(item, pathStr);\r\n      this.requestUpdate();\r\n    } else {\r\n      if (this._focusedItem) {\r\n        this._focusedItem.focused = false;\r\n      }\r\n\r\n      this._focusedItem = null;\r\n    }\r\n  }\r\n\r\n  private onComponentKeyDown(ev: KeyboardEvent) {\r\n    const keys = [\r\n      KeyName.ARROW_DOWN,\r\n      KeyName.ARROW_UP,\r\n      KeyName.ENTER,\r\n      KeyName.ESCAPE,\r\n      KeyName.SPACE,\r\n    ];\r\n\r\n    if (keys.includes(ev.key as KeyName)) {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n    }\r\n\r\n    if (ev.key === KeyName.ESCAPE) {\r\n      this._focusedItem = null;\r\n    }\r\n\r\n    if (ev.key === KeyName.ARROW_UP) {\r\n      this._focusPrevItem();\r\n    }\r\n\r\n    if (ev.key === KeyName.ARROW_DOWN) {\r\n      this._focusNextItem();\r\n    }\r\n\r\n    if (ev.key === KeyName.ENTER || ev.key === KeyName.SPACE) {\r\n      if (this._selectedItem) {\r\n        this._selectedItem.selected = false;\r\n      }\r\n\r\n      if (this._focusedItem) {\r\n        this._selectedItem = this._focusedItem;\r\n      }\r\n\r\n      if (this._selectedItem) {\r\n        this._selectedItem.selected = true;\r\n        this._selectedItem.open = !this._selectedItem.open;\r\n        this.emitSelectEvent(\r\n          this._selectedItem as TreeItem,\r\n          this._selectedItem.path!.join('/')\r\n        );\r\n        this.requestUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onComponentKeyDownBound = this.onComponentKeyDown.bind(this);\r\n\r\n  public closeAll(): void {\r\n    this.closeSubTreeRecursively(this.data);\r\n    this.requestUpdate();\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    this.addEventListener('keydown', this.onComponentKeyDownBound);\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    super.disconnectedCallback();\r\n    this.removeEventListener('keydown', this.onComponentKeyDownBound);\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: block;\r\n          outline: none;\r\n          user-select: none;\r\n        }\r\n\r\n        .wrapper {\r\n          height: 100%;\r\n        }\r\n\r\n        :host(:focus) .wrapper.focused-none {\r\n          outline: 1px solid var(--vscode-list-focusOutline);\r\n        }\r\n\r\n        li {\r\n          list-style: none;\r\n        }\r\n\r\n        ul,\r\n        li {\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n\r\n        .contents {\r\n          align-items: center;\r\n          display: flex;\r\n          font-family: var(--vscode-font-family);\r\n          font-size: var(--vscode-font-size);\r\n          font-weight: var(--vscode-font-weight);\r\n        }\r\n\r\n        .multi .contents {\r\n          align-items: flex-start;\r\n        }\r\n\r\n        .contents:hover {\r\n          background-color: var(--vscode-list-hoverBackground);\r\n          color: var(--vscode-list-hoverForeground);\r\n          cursor: pointer;\r\n        }\r\n\r\n        .contents.selected {\r\n          background-color: var(--vscode-list-inactiveSelectionBackground);\r\n        }\r\n\r\n        :host(:focus) .contents.focused {\r\n          background-color: var(--vscode-list-focusBackground);\r\n          outline: 1px solid var(--vscode-list-focusOutline);\r\n          outline-offset: -1px;\r\n        }\r\n\r\n        :host(:focus) .contents.selected.focused,\r\n        :host(:focus) .contents.selected {\r\n          background-color: var(--vscode-list-activeSelectionBackground);\r\n          color: var(--vscode-list-activeSelectionForeground);\r\n        }\r\n\r\n        .icon-arrow {\r\n          display: block;\r\n          margin: 3px 2px 3px 0;\r\n        }\r\n\r\n        .label-icon {\r\n          display: block;\r\n          margin-right: 6px;\r\n        }\r\n\r\n        :host(:focus) .contents.selected.focused .label-icon,\r\n        :host(:focus) .contents.selected .label-icon {\r\n          color: var(--vscode-list-activeSelectionForeground);\r\n        }\r\n\r\n        .multi .contents .label-icon {\r\n          margin-top: 3px;\r\n        }\r\n\r\n        .label {\r\n          display: block;\r\n          line-height: 22px;\r\n        }\r\n\r\n        .single .label {\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    const classes = classMap({\r\n      multi: this.multiline,\r\n      single: !this.multiline,\r\n      wrapper: true,\r\n      'focused-none': !this._focusedItem,\r\n      'selection-none': !this._selectedItem,\r\n      'selection-single': this._selectedItem !== null,\r\n    });\r\n\r\n    return html`\r\n      <div @click=\"${this.onComponentClick}\" class=\"${classes}\">\r\n        <ul>\r\n          ${this.renderTree(this._data)}\r\n        </ul>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-tree': VscodeTree;\r\n  }\r\n}\r\n"]}