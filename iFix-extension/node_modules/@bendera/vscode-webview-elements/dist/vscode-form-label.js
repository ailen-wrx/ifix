var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { css, html } from 'lit';
import { customElement } from 'lit/decorators.js';
import { VscElement } from './includes/VscElement';
let VscodeFormLabel = class VscodeFormLabel extends VscElement {
    static get styles() {
        return [
            super.styles,
            css `
        :host {
          color: var(--vscode-foreground);
          cursor: default;
          display: block;
          font-family: var(--vscode-font-family);
          font-size: var(--vscode-font-size);
          font-weight: 600;
          line-height: 1.4;
          overflow: hidden;
          text-overflow: ellipsis;
          user-select: text;
          white-space: nowrap;
        }

        ::slotted(b) {
          font-weight: 600;
          opacity: 0.9;
        }
      `,
        ];
    }
    render() {
        return html ` <slot></slot> `;
    }
};
VscodeFormLabel = __decorate([
    customElement('vscode-form-label')
], VscodeFormLabel);
export { VscodeFormLabel };
//# sourceMappingURL=vscode-form-label.js.map