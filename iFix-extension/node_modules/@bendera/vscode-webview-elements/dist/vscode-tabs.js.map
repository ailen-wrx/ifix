{"version":3,"file":"vscode-tabs.js","sourceRoot":"","sources":["../src/vscode-tabs.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\n@customElement('vscode-tabs')\r\nexport class VscodeTabs extends VscElement {\r\n  @property({type: Number})\r\n  set selectedIndex(index: number) {\r\n    this._selectedIndex = index;\r\n    this._setActiveTab();\r\n  }\r\n  get selectedIndex(): number {\r\n    return this._selectedIndex;\r\n  }\r\n\r\n  private _headerSlot: HTMLSlotElement | null = null;\r\n  private _mainSlot: HTMLSlotElement | null = null;\r\n  private _selectedIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this._selectedIndex = 0;\r\n  }\r\n\r\n  private _setActiveTab() {\r\n    if (!this._mainSlot || !this._headerSlot) {\r\n      return;\r\n    }\r\n\r\n    Array.from(this._mainSlot.assignedElements()).forEach((el: Element, i) => {\r\n      (el as HTMLElement).style.display =\r\n        i === this._selectedIndex ? 'block' : 'none';\r\n    });\r\n\r\n    Array.from(this._headerSlot.assignedElements()).forEach(\r\n      (el: Element, i) => {\r\n        (el as HTMLElement).dataset.index = String(i);\r\n        el.classList.toggle('is-active', i === this._selectedIndex);\r\n      }\r\n    );\r\n\r\n    this.dispatchEvent(\r\n      new CustomEvent('vsc-select', {\r\n        detail: {\r\n          selectedIndex: this._selectedIndex,\r\n        },\r\n        composed: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  private _onSlotChanged() {\r\n    this._setActiveTab();\r\n  }\r\n\r\n  private _onHeaderClick(event: MouseEvent) {\r\n    const index = (event.target as HTMLElement).dataset.index;\r\n\r\n    if (!index) {\r\n      return;\r\n    }\r\n\r\n    this._selectedIndex = Number(index);\r\n    this._setActiveTab();\r\n  }\r\n\r\n  firstUpdated(): void {\r\n    this._headerSlot = this.shadowRoot!.querySelector(\r\n      'slot[name=header]'\r\n    ) as HTMLSlotElement;\r\n    this._mainSlot = this.shadowRoot!.querySelector(\r\n      'slot:not([name=header])'\r\n    ) as HTMLSlotElement;\r\n\r\n    this._mainSlot.addEventListener(\r\n      'slotchange',\r\n      this._onSlotChanged.bind(this)\r\n    );\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: block;\r\n        }\r\n\r\n        .header {\r\n          display: flex;\r\n          font-family: var(--vscode-font-family);\r\n          font-size: var(--vscode-font-size);\r\n          font-weight: var(--vscode-font-weight);\r\n          width: 100%;\r\n        }\r\n\r\n        :host-context(.vscode-light) .header {\r\n          border-bottom: 1px solid #ccc;\r\n        }\r\n\r\n        ::slotted(header) {\r\n          border-bottom: 1px solid transparent;\r\n          color: var(--vscode-foreground);\r\n          cursor: pointer;\r\n          display: block;\r\n          margin-bottom: -1px;\r\n          overflow: hidden;\r\n          padding: 7px 8px;\r\n          text-overflow: ellipsis;\r\n          user-select: none;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        ::slotted(.is-active) {\r\n          border-bottom-color: var(--vscode-settings-headerForeground);\r\n          color: var(--vscode-settings-headerForeground);\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    return html`\r\n      <div class=\"header\" @click=\"${this._onHeaderClick}\">\r\n        <slot name=\"header\"></slot>\r\n      </div>\r\n      <slot></slot>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-tabs': VscodeTabs;\r\n  }\r\n}\r\n"]}