{"version":3,"file":"vscode-label.js","sourceRoot":"","sources":["../src/vscode-label.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,GAAG,EAAkB,IAAI,EAAiB,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,uBAAuB,EAAC,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAOjD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAA3C;;QAEE,QAAG,GAAG,EAAE,CAAC;IAyDX,CAAC;IAvDC,MAAM,KAAK,MAAM;QACf,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;yBAUgB,uBAAuB;;;;;;;;;;;;;;;;;OAiBzC;SACF,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,IAAI,MAAM,CAAC;QAEX,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC,CAA0B,CAAC;YAE1E,IAAI,IAAI,EAAE;gBACR,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5C,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,EAAE;oBAC9B,MAA2B,CAAC,KAAK,EAAE,CAAC;iBACtC;aACF;SACF;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;oCACqB,IAAI,CAAC,YAAY;KAChD,CAAC;IACJ,CAAC;CACF,CAAA;AAzDC;IADC,QAAQ,EAAE;wCACF;AAFE,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CA2DvB;SA3DY,WAAW","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {INPUT_LINE_HEIGHT_RATIO} from './includes/helpers';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\ninterface FocusableElement extends Element {\r\n  focus: () => void;\r\n}\r\n\r\n@customElement('vscode-label')\r\nexport class VscodeLabel extends VscElement {\r\n  @property()\r\n  for = '';\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          cursor: default;\r\n          display: block;\r\n        }\r\n\r\n        .wrapper {\r\n          color: var(--vscode--settings-headerForeground);\r\n          font-size: var(--vscode-font-size);\r\n          font-weight: 600;\r\n          line-height: ${INPUT_LINE_HEIGHT_RATIO};\r\n          padding: 5px 0;\r\n        }\r\n\r\n        :host-context(vscode-form-group[variant='settings-group']) .wrapper {\r\n          line-height: 18px;\r\n          padding: 0;\r\n        }\r\n\r\n        ::slotted(.normal) {\r\n          font-weight: normal;\r\n        }\r\n\r\n        ::slotted(.lightened) {\r\n          color: var(--vscode-foreground);\r\n          opacity: 0.9;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  private _handleClick() {\r\n    let target;\r\n\r\n    if (this.for) {\r\n      const root = this.getRootNode({composed: false}) as Document | ShadowRoot;\r\n\r\n      if (root) {\r\n        target = root.querySelector(`#${this.for}`);\r\n\r\n        if (target && 'focus' in target) {\r\n          (target as FocusableElement).focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    return html`\r\n      <div class=\"wrapper\" @click=${this._handleClick}><slot></slot></div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-label': VscodeLabel;\r\n  }\r\n}\r\n"]}