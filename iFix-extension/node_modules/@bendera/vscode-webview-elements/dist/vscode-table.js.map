{"version":3,"file":"vscode-table.js","sourceRoot":"","sources":["../src/vscode-table.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {\r\n  customElement,\r\n  property,\r\n  query,\r\n  queryAll,\r\n  queryAssignedNodes,\r\n  state,\r\n} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport {VscElement} from './includes/VscElement';\r\nimport './vscode-scrollable';\r\nimport {VscodeScrollable} from './vscode-scrollable';\r\nimport {VscodeTableBody} from './vscode-table-body';\r\nimport {VscodeTableCell} from './vscode-table-cell';\r\nimport {VscodeTableHeader} from './vscode-table-header';\r\nimport {VscodeTableHeaderCell} from './vscode-table-header-cell';\r\nimport {rawValueToPercentage} from './vscode-table/helpers';\r\n\r\nconst COMPONENT_WIDTH_PERCENTAGE = 100;\r\n\r\n/**\r\n * @attr {Boolean} zebra\r\n * @attr {Boolean} bordered\r\n */\r\n@customElement('vscode-table')\r\nexport class VscodeTable extends VscElement {\r\n  @property({reflect: true})\r\n  role = 'table';\r\n\r\n  @property({type: Boolean})\r\n  resizable = false;\r\n\r\n  @property({type: Boolean, reflect: true})\r\n  responsive = false;\r\n\r\n  @property({type: Number})\r\n  breakpoint = 300;\r\n\r\n  /**\r\n   * Initial column sizes in a JSON-encoded array.\r\n   * Accepted values are:\r\n   * - number\r\n   * - string-type number (ex.: \"100\")\r\n   * - px value (ex.: \"100px\")\r\n   * - percentage value (ex.: \"50%\")\r\n   * - percentage value (ex.: \"50%\")\r\n   * - \"auto\" keyword\r\n   */\r\n  @property({type: Array})\r\n  set columns(val: string[]) {\r\n    this._columns = val;\r\n\r\n    if (this.isConnected) {\r\n      this._initDefaultColumnSizes();\r\n    }\r\n  }\r\n  get columns(): string[] {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * Minimum column width. Valid values are:\r\n   * - number\r\n   * - string-type number (ex.: \"100\")\r\n   * - px value (ex.: \"100px\")\r\n   * - percentage value (ex.: \"50%\")\r\n   * - percentage value (ex.: \"50%\")\r\n   * - \"auto\" keyword\r\n   */\r\n  @property({attribute: 'min-column-width'})\r\n  minColumnWidth = '50px';\r\n\r\n  @property({type: Boolean, attribute: 'delayed-resizing'})\r\n  delayedResizing = false;\r\n\r\n  /**\r\n   * For internal use only\r\n   */\r\n  @property({type: Boolean, reflect: true})\r\n  compact = false;\r\n\r\n  @query('slot[name=\"body\"]')\r\n  private _bodySlot!: HTMLSlotElement;\r\n\r\n  @query('.header')\r\n  private _headerElement!: HTMLDivElement;\r\n\r\n  @query('.scrollable')\r\n  private _scrollableElement!: VscodeScrollable;\r\n\r\n  @queryAll('.sash-visible')\r\n  private _sashVisibleElements!: HTMLDivElement[];\r\n\r\n  @queryAssignedNodes('header', true, 'vscode-table-header')\r\n  private _assignedHeaderElements!: NodeListOf<VscodeTableHeader>;\r\n\r\n  @queryAssignedNodes('body', true, 'vscode-table-body')\r\n  private _assignedBodyElements!: NodeListOf<VscodeTableBody>;\r\n\r\n  /**\r\n   * Sash positions in percentage\r\n   */\r\n  @state()\r\n  private _sashPositions: number[] = [];\r\n\r\n  @state()\r\n  private _isDragging = false;\r\n\r\n  /**\r\n   * Sash hover state flags, used in the render.\r\n   */\r\n  private _sashHovers: boolean[] = [];\r\n  private _columns: string[] = [];\r\n  private _componentResizeObserver!: ResizeObserver;\r\n  private _headerResizeObserver!: ResizeObserver;\r\n  private _activeSashElementIndex = -1;\r\n  private _activeSashCursorOffset = 0;\r\n  private _componentX = 0;\r\n  private _componentH = 0;\r\n  private _componentW = 0;\r\n  /**\r\n   * Cached querySelectorAll result. Updated when the header slot changes.\r\n   * It shouldn't be used directly, check the \"_getHeaderCells\" function.\r\n   */\r\n  private _headerCells: VscodeTableHeaderCell[] = [];\r\n  /**\r\n   * Cached querySelectorAll result. Updated when the body slot changes.\r\n   * It shouldn't be used directly, check the \"_getCellsOfFirstRow\" function.\r\n   */\r\n  private _cellsOfFirstRow: VscodeTableCell[] = [];\r\n  private _cellsToResize!: VscodeTableCell[];\r\n  private _headerCellsToResize!: VscodeTableHeaderCell[];\r\n  private _prevHeaderHeight = 0;\r\n  private _prevComponentHeight = 0;\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n\r\n    this._memoizeComponentDimensions();\r\n    this._initDefaultColumnSizes();\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    super.disconnectedCallback();\r\n    this._componentResizeObserver.unobserve(this);\r\n    this._componentResizeObserver.disconnect();\r\n  }\r\n\r\n  private _px2Percent(px: number) {\r\n    return (px / this._componentW) * 100;\r\n  }\r\n\r\n  private _percent2Px(percent: number) {\r\n    return (this._componentW * percent) / 100;\r\n  }\r\n\r\n  private _memoizeComponentDimensions() {\r\n    const cr = this.getBoundingClientRect();\r\n\r\n    this._componentH = cr.height;\r\n    this._componentW = cr.width;\r\n    this._componentX = cr.x;\r\n  }\r\n\r\n  private _queryHeaderCells() {\r\n    const headers = this._assignedHeaderElements;\r\n\r\n    if (!(headers && headers[0])) {\r\n      return [];\r\n    }\r\n\r\n    return Array.from(\r\n      headers[0].querySelectorAll<VscodeTableHeaderCell>(\r\n        'vscode-table-header-cell'\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get cached header cells\r\n   */\r\n  private _getHeaderCells() {\r\n    if (!this._headerCells.length) {\r\n      this._headerCells = this._queryHeaderCells();\r\n    }\r\n\r\n    return this._headerCells;\r\n  }\r\n\r\n  private _queryCellsOfFirstRow() {\r\n    const assignedBodyElements = this._assignedBodyElements;\r\n\r\n    if (!(assignedBodyElements && assignedBodyElements[0])) {\r\n      return [];\r\n    }\r\n\r\n    return Array.from(\r\n      assignedBodyElements[0].querySelectorAll<VscodeTableCell>(\r\n        'vscode-table-row:first-child vscode-table-cell'\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get cached cells of first row\r\n   */\r\n  private _getCellsOfFirstRow() {\r\n    if (!this._cellsOfFirstRow.length) {\r\n      this._cellsOfFirstRow = this._queryCellsOfFirstRow();\r\n    }\r\n\r\n    return this._cellsOfFirstRow;\r\n  }\r\n\r\n  private _initResizeObserver() {\r\n    this._componentResizeObserver = new ResizeObserver(\r\n      this._componentResizeObserverCallbackBound\r\n    );\r\n    this._componentResizeObserver.observe(this);\r\n\r\n    this._headerResizeObserver = new ResizeObserver(\r\n      this._headerResizeObserverCallbackBound\r\n    );\r\n    this._headerResizeObserver.observe(this._headerElement);\r\n  }\r\n\r\n  private _componentResizeObserverCallback() {\r\n    this._memoizeComponentDimensions();\r\n    this._updateScrollpaneSize();\r\n\r\n    if (this.responsive) {\r\n      this._toggleCompactView();\r\n    }\r\n  }\r\n\r\n  private _componentResizeObserverCallbackBound =\r\n    this._componentResizeObserverCallback.bind(this);\r\n\r\n  private _headerResizeObserverCallback() {\r\n    this._updateScrollpaneSize();\r\n  }\r\n\r\n  private _headerResizeObserverCallbackBound =\r\n    this._headerResizeObserverCallback.bind(this);\r\n\r\n  private _calcColWidthPercentages(): number[] {\r\n    const numCols = this._getHeaderCells().length;\r\n    let cols: (string | number)[] = this.columns.slice(0, numCols);\r\n    const numAutoCols =\r\n      cols.filter((c) => c === 'auto').length + numCols - cols.length;\r\n    let availablePercent = 100;\r\n\r\n    cols = cols.map((col) => {\r\n      const percentage = rawValueToPercentage(col, this._componentW);\r\n\r\n      if (percentage === null) {\r\n        return 'auto';\r\n      }\r\n\r\n      availablePercent -= percentage;\r\n\r\n      return percentage;\r\n    });\r\n\r\n    if (cols.length < numCols) {\r\n      for (let i = cols.length; i < numCols; i++) {\r\n        cols.push('auto');\r\n      }\r\n    }\r\n\r\n    cols = cols.map((col) => {\r\n      if (col === 'auto') {\r\n        return availablePercent / numAutoCols;\r\n      }\r\n\r\n      return col as number;\r\n    });\r\n\r\n    return cols as number[];\r\n  }\r\n\r\n  private _initHeaderCellSizes(colWidths: number[]) {\r\n    this._getHeaderCells().forEach((cell, index) => {\r\n      cell.style.width = `${colWidths[index]}%`;\r\n    });\r\n  }\r\n\r\n  private _initBodyColumnSizes(colWidths: number[]) {\r\n    this._getCellsOfFirstRow().forEach((cell, index) => {\r\n      cell.style.width = `${colWidths[index]}%`;\r\n    });\r\n  }\r\n\r\n  private _initSashes(colWidths: number[]) {\r\n    const l = colWidths.length;\r\n    let prevHandlerPos = 0;\r\n    this._sashPositions = [];\r\n\r\n    colWidths.forEach((collW, index) => {\r\n      if (index < l - 1) {\r\n        const pos = prevHandlerPos + collW;\r\n\r\n        this._sashPositions.push(pos);\r\n        prevHandlerPos = pos;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _initDefaultColumnSizes() {\r\n    const colWidths = this._calcColWidthPercentages();\r\n\r\n    this._initHeaderCellSizes(colWidths);\r\n    this._initBodyColumnSizes(colWidths);\r\n    this._initSashes(colWidths);\r\n  }\r\n\r\n  private _updateScrollpaneSize() {\r\n    const headerCr = this._headerElement.getBoundingClientRect();\r\n\r\n    if (\r\n      headerCr.height === this._prevHeaderHeight &&\r\n      this._componentH === this._prevComponentHeight\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this._prevHeaderHeight = headerCr.height;\r\n    this._prevComponentHeight = this._componentH;\r\n    const scrollableH = this._componentH - headerCr.height;\r\n    this._scrollableElement.style.height = `${scrollableH}px`;\r\n\r\n    this._sashVisibleElements.forEach((el) => {\r\n      el.style.height = `${scrollableH}px`;\r\n      el.style.top = `${headerCr.height}px`;\r\n    });\r\n  }\r\n\r\n  private _applyCompactViewColumnLabels() {\r\n    const headerCells = this._getHeaderCells();\r\n    const labels = headerCells.map((c) => c.innerText);\r\n    const rows = this.querySelectorAll('vscode-table-row');\r\n\r\n    rows.forEach((r) => {\r\n      const cells = r.querySelectorAll('vscode-table-cell');\r\n\r\n      cells.forEach((c, i) => {\r\n        c.columnLabel = labels[i];\r\n        c.compact = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  private _clearCompactViewColumnLabels() {\r\n    this.querySelectorAll('vscode-table-cell').forEach((c) => {\r\n      c.columnLabel = '';\r\n      c.compact = false;\r\n    });\r\n  }\r\n\r\n  private _toggleCompactView() {\r\n    const cr = this.getBoundingClientRect();\r\n    const nextCompactView = cr.width < this.breakpoint;\r\n\r\n    if (this.compact !== nextCompactView) {\r\n      this.compact = nextCompactView;\r\n\r\n      if (nextCompactView) {\r\n        this._applyCompactViewColumnLabels();\r\n      } else {\r\n        this._clearCompactViewColumnLabels();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onHeaderSlotChange() {\r\n    this._headerCells = this._queryHeaderCells();\r\n  }\r\n\r\n  private _onBodySlotChange() {\r\n    this._initDefaultColumnSizes();\r\n    this._initResizeObserver();\r\n  }\r\n\r\n  private _onSashMouseOver(event: MouseEvent) {\r\n    if (this._isDragging) {\r\n      return;\r\n    }\r\n\r\n    const target = event.currentTarget as HTMLDivElement;\r\n    const index = Number(target.dataset.index);\r\n    this._sashHovers[index] = true;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private _onSashMouseOut(event: MouseEvent) {\r\n    event.stopPropagation();\r\n\r\n    if (this._isDragging) {\r\n      return;\r\n    }\r\n\r\n    const target = event.currentTarget as HTMLDivElement;\r\n    const index = Number(target.dataset.index);\r\n    this._sashHovers[index] = false;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private _onSashMouseDown(event: MouseEvent) {\r\n    event.stopPropagation();\r\n\r\n    const {pageX, currentTarget} = event;\r\n    const el = currentTarget as HTMLDivElement;\r\n    const index = Number(el.dataset.index);\r\n    const cr = el.getBoundingClientRect();\r\n    const elX = cr.x;\r\n\r\n    this._isDragging = true;\r\n    this._activeSashElementIndex = index;\r\n    this._sashHovers[this._activeSashElementIndex] = true;\r\n    this._activeSashCursorOffset = this._px2Percent(pageX - elX);\r\n\r\n    const headerCells = this._getHeaderCells();\r\n    this._headerCellsToResize = [];\r\n    this._headerCellsToResize.push(headerCells[index]);\r\n\r\n    if (headerCells[index + 1]) {\r\n      this._headerCellsToResize[1] = headerCells[index + 1];\r\n    }\r\n\r\n    const tbody = this._bodySlot.assignedElements()[0];\r\n    const cells = tbody.querySelectorAll<VscodeTableCell>(\r\n      'vscode-table-row:first-child > vscode-table-cell'\r\n    );\r\n    this._cellsToResize = [];\r\n    this._cellsToResize.push(cells[index]);\r\n\r\n    if (cells[index + 1]) {\r\n      this._cellsToResize.push(cells[index + 1]);\r\n    }\r\n\r\n    document.addEventListener('mousemove', this._onResizingMouseMoveBound);\r\n    document.addEventListener('mouseup', this._onResizingMouseUpBound);\r\n  }\r\n\r\n  private _updateActiveSashPosition(mouseX: number) {\r\n    const {prevSashPos, nextSashPos} = this._getSashPositions();\r\n    let minColumnWidth = rawValueToPercentage(\r\n      this.minColumnWidth,\r\n      this._componentW\r\n    );\r\n\r\n    if (minColumnWidth === null) {\r\n      minColumnWidth = 0;\r\n    }\r\n\r\n    const minX = prevSashPos ? prevSashPos + minColumnWidth : minColumnWidth;\r\n    const maxX = nextSashPos\r\n      ? nextSashPos - minColumnWidth\r\n      : COMPONENT_WIDTH_PERCENTAGE - minColumnWidth;\r\n    let newX = this._px2Percent(\r\n      mouseX - this._componentX - this._percent2Px(this._activeSashCursorOffset)\r\n    );\r\n\r\n    newX = Math.max(newX, minX);\r\n    newX = Math.min(newX, maxX);\r\n\r\n    this._sashPositions[this._activeSashElementIndex] = newX;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private _getSashPositions(): {\r\n    sashPos: number;\r\n    prevSashPos: number;\r\n    nextSashPos: number;\r\n  } {\r\n    const sashPos = this._sashPositions[this._activeSashElementIndex];\r\n    const prevSashPos =\r\n      this._sashPositions[this._activeSashElementIndex - 1] || 0;\r\n    const nextSashPos =\r\n      this._sashPositions[this._activeSashElementIndex + 1] ||\r\n      COMPONENT_WIDTH_PERCENTAGE;\r\n\r\n    return {\r\n      sashPos,\r\n      prevSashPos,\r\n      nextSashPos,\r\n    };\r\n  }\r\n\r\n  private _resizeColumns(resizeBodyCells = true) {\r\n    const {sashPos, prevSashPos, nextSashPos} = this._getSashPositions();\r\n\r\n    const prevColW = sashPos - prevSashPos;\r\n    const nextColW = nextSashPos - sashPos;\r\n    const prevColCss = `${prevColW}%`;\r\n    const nextColCss = `${nextColW}%`;\r\n\r\n    this._headerCellsToResize[0].style.width = prevColCss;\r\n\r\n    if (this._headerCellsToResize[1]) {\r\n      this._headerCellsToResize[1].style.width = nextColCss;\r\n    }\r\n\r\n    if (resizeBodyCells) {\r\n      this._cellsToResize[0].style.width = prevColCss;\r\n\r\n      if (this._cellsToResize[1]) {\r\n        this._cellsToResize[1].style.width = nextColCss;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onResizingMouseMove(event: MouseEvent) {\r\n    event.stopPropagation();\r\n    this._updateActiveSashPosition(event.pageX);\r\n\r\n    if (!this.delayedResizing) {\r\n      this._resizeColumns(true);\r\n    } else {\r\n      this._resizeColumns(false);\r\n    }\r\n  }\r\n\r\n  private _onResizingMouseMoveBound = this._onResizingMouseMove.bind(this);\r\n\r\n  private _onResizingMouseUp(event: MouseEvent) {\r\n    this._resizeColumns(true);\r\n    this._updateActiveSashPosition(event.pageX);\r\n    this._sashHovers[this._activeSashElementIndex] = false;\r\n    this._isDragging = false;\r\n    this._activeSashElementIndex = -1;\r\n\r\n    document.removeEventListener('mousemove', this._onResizingMouseMoveBound);\r\n    document.removeEventListener('mouseup', this._onResizingMouseUpBound);\r\n  }\r\n\r\n  private _onResizingMouseUpBound = this._onResizingMouseUp.bind(this);\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: block;\r\n        }\r\n\r\n        ::slotted(vscode-table-row) {\r\n          width: 100%;\r\n        }\r\n\r\n        .wrapper {\r\n          height: 100%;\r\n          max-width: 100%;\r\n          overflow: hidden;\r\n          position: relative;\r\n          width: 100%;\r\n        }\r\n\r\n        .wrapper.select-disabled {\r\n          user-select: none;\r\n        }\r\n\r\n        .wrapper.resize-cursor {\r\n          cursor: ew-resize;\r\n        }\r\n\r\n        .wrapper.compact-view .header-slot-wrapper {\r\n          height: 0;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .scrollable {\r\n          height: 100%;\r\n        }\r\n\r\n        .scrollable:before {\r\n          background-color: transparent;\r\n          content: '';\r\n          display: block;\r\n          height: 1px;\r\n          position: absolute;\r\n          width: 100%;\r\n        }\r\n\r\n        :host(:not([bordered]))\r\n          .wrapper:not(.compact-view):hover\r\n          .scrollable:not([scrolled]):before,\r\n        :host([bordered])\r\n          .wrapper:not(.compact-view)\r\n          .scrollable:not([scrolled]):before {\r\n          background-color: var(--vscode-editorGroup-border);\r\n        }\r\n\r\n        :host(:not([bordered])) .sash {\r\n          visibility: hidden;\r\n        }\r\n\r\n        :host(:not([compact])) .wrapper:hover .sash {\r\n          visibility: visible;\r\n        }\r\n\r\n        .sash {\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 1px;\r\n        }\r\n\r\n        .wrapper.compact-view .sash {\r\n          display: none;\r\n        }\r\n\r\n        .sash.resizable {\r\n          cursor: ew-resize;\r\n        }\r\n\r\n        .sash-visible {\r\n          background-color: var(--vscode-editorGroup-border);\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 1px;\r\n        }\r\n\r\n        .sash.hover .sash-visible {\r\n          background-color: var(--vscode-sash-hoverBorder);\r\n          transition: background-color 50ms linear 300ms;\r\n        }\r\n\r\n        .sash .sash-clickable {\r\n          background-color: transparent;\r\n          height: 100%;\r\n          left: -2px;\r\n          position: absolute;\r\n          width: 5px;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    const sashes = this._sashPositions.map((val, index) => {\r\n      const classes = classMap({\r\n        sash: true,\r\n        hover: this._sashHovers[index],\r\n        resizable: this.resizable,\r\n      });\r\n\r\n      const left = `${val}%`;\r\n\r\n      return this.resizable\r\n        ? html`\r\n            <div\r\n              class=\"${classes}\"\r\n              data-index=\"${index}\"\r\n              style=\"${styleMap({left})}\"\r\n              @mousedown=\"${this._onSashMouseDown}\"\r\n              @mouseover=\"${this._onSashMouseOver}\"\r\n              @mouseout=\"${this._onSashMouseOut}\"\r\n            >\r\n              <div class=\"sash-visible\"></div>\r\n              <div class=\"sash-clickable\"></div>\r\n            </div>\r\n          `\r\n        : html`<div\r\n            class=\"${classes}\"\r\n            data-index=\"${index}\"\r\n            style=\"${styleMap({left})}\"\r\n          >\r\n            <div class=\"sash-visible\"></div>\r\n          </div>`;\r\n    });\r\n\r\n    const wrapperClasses = classMap({\r\n      wrapper: true,\r\n      'select-disabled': this._isDragging,\r\n      'resize-cursor': this._isDragging,\r\n      'compact-view': this.compact,\r\n    });\r\n\r\n    return html`\r\n      <div class=\"${wrapperClasses}\">\r\n        <div class=\"header\" @slotchange=\"${this._onHeaderSlotChange}\">\r\n          <slot name=\"caption\"></slot>\r\n          <div class=\"header-slot-wrapper\">\r\n            <slot name=\"header\"></slot>\r\n          </div>\r\n        </div>\r\n        <vscode-scrollable class=\"scrollable\">\r\n          <div>\r\n            <slot name=\"body\" @slotchange=\"${this._onBodySlotChange}\"></slot>\r\n          </div>\r\n        </vscode-scrollable>\r\n        ${sashes}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-table': VscodeTable;\r\n  }\r\n}\r\n"]}