{"version":3,"file":"VscodeButton.js","sourceRoot":"","sources":["../../src/vscode-button/VscodeButton.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  nothing,\n  TemplateResult,\n} from 'lit';\nimport {property} from 'lit/decorators';\nimport {classMap} from 'lit/directives/class-map';\nimport '../vscode-icon';\n\n/**\n * @fires vsc-click - Dispatched only if the disabled attribute is false.\n */\n// @customElement('vscode-button')\nexport class VscodeButton extends LitElement {\n  @property({type: Number, reflect: true}) tabindex = 0;\n  @property({type: Boolean}) secondary = false;\n  @property({reflect: true}) role = 'button';\n  @property({type: Boolean}) disabled = false;\n  /**\n   * A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) before the label\n   */\n  @property() icon = '';\n  /**\n   * A [Codicon](https://microsoft.github.io/vscode-codicons/dist/codicon.html) after the label\n   */\n  @property() iconAfter = '';\n\n  @property({type: Boolean, reflect: true})\n  focused = false;\n\n  private _prevTabindex = 0;\n\n  constructor() {\n    super();\n    this.addEventListener('keydown', this._handleKeyDown.bind(this));\n    this.addEventListener('click', this._handleClick.bind(this));\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.addEventListener('focus', this._handleFocusBound);\n    this.addEventListener('blur', this._handleBlurBound);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('focus', this._handleFocusBound);\n    this.removeEventListener('blur', this._handleBlurBound);\n  }\n\n  attributeChangedCallback(name: string, oldVal: string, newVal: string): void {\n    super.attributeChangedCallback(name, oldVal, newVal);\n\n    if (name === 'disabled' && this.hasAttribute('disabled')) {\n      this._prevTabindex = this.tabindex;\n      this.tabindex = -1;\n    } else if (name === 'disabled' && !this.hasAttribute('disabled')) {\n      this.tabindex = this._prevTabindex;\n    }\n  }\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    if (\n      (event.key === 'Enter' || event.key === ' ') &&\n      !this.hasAttribute('disabled')\n    ) {\n      this.dispatchEvent(\n        new CustomEvent<{\n          originalEvent: MouseEvent;\n        }>('vsc-click', {\n          detail: {\n            originalEvent: new MouseEvent('click'),\n          },\n        })\n      );\n    }\n  }\n\n  private _handleClick(event: MouseEvent) {\n    if (!this.hasAttribute('disabled')) {\n      this.dispatchEvent(\n        new CustomEvent<{\n          originalEvent: MouseEvent;\n        }>('vsc-click', {\n          detail: {\n            originalEvent: event,\n          },\n        })\n      );\n    }\n  }\n\n  private _handleFocus() {\n    this.focused = true;\n  }\n\n  private _handleFocusBound = this._handleFocus.bind(this);\n\n  private _handleBlur() {\n    this.focused = false;\n  }\n\n  private _handleBlurBound = this._handleBlur.bind(this);\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        align-items: center;\n        background-color: var(--vscode-button-background);\n        border: 0;\n        border-radius: 0;\n        box-sizing: border-box;\n        color: var(--vscode-button-foreground);\n        cursor: pointer;\n        display: inline-flex;\n        font-size: var(--vscode-font-size);\n        font-weight: var(--vscode-font-weight);\n        line-height: 26px;\n        padding: 0 14px;\n        user-select: none;\n      }\n\n      :host([secondary]) {\n        color: var(--vscode-button-secondaryForeground);\n        background-color: var(--vscode-button-secondaryBackground);\n      }\n\n      :host([disabled]) {\n        cursor: default;\n        opacity: 0.4;\n        pointer-events: none;\n      }\n\n      :host(:hover) {\n        background-color: var(--vscode-button-hoverBackground);\n      }\n\n      :host([disabled]:hover) {\n        background-color: var(--vscode-button-background);\n      }\n\n      :host([secondary]:hover) {\n        background-color: var(--vscode-button-secondaryHoverBackground);\n      }\n\n      :host([secondary][disabled]:hover) {\n        background-color: var(--vscode-button-secondaryBackground);\n      }\n\n      :host(:focus),\n      :host(:active) {\n        outline: none;\n      }\n\n      :host(:focus) {\n        background-color: var(--vscode-button-hoverBackground);\n        outline: 1px solid var(--vscode-focusBorder);\n        outline-offset: 2px;\n      }\n\n      :host([disabled]:focus) {\n        background-color: var(--vscode-button-background);\n        outline: 0;\n      }\n\n      :host([secondary]:focus) {\n        background-color: var(--vscode-button-secondaryHoverBackground);\n      }\n\n      :host([secondary][disabled]:focus) {\n        background-color: var(--vscode-button-secondaryBackground);\n      }\n\n      .wrapper {\n        align-items: center;\n        display: flex;\n        position: relative;\n      }\n\n      .wrapper.has-icon-before {\n        padding-left: 21px;\n      }\n\n      .wrapper.has-icon-after {\n        padding-right: 21px;\n      }\n\n      .icon {\n        color: var(--vscode-button-foreground);\n        left: 0;\n        position: absolute;\n      }\n\n      .icon-after {\n        color: var(--vscode-button-foreground);\n        position: absolute;\n        right: 0;\n      }\n    `;\n  }\n\n  render(): TemplateResult {\n    const hasIcon = this.icon !== '';\n    const hasIconAfter = this.iconAfter !== '';\n    const wrapperClasses = {\n      wrapper: true,\n      'has-icon-before': hasIcon,\n      'has-icon-after': hasIconAfter,\n    };\n\n    const iconElem = hasIcon\n      ? html`<vscode-icon name=\"${this.icon}\" class=\"icon\"></vscode-icon>`\n      : nothing;\n\n    const iconAfterElem = hasIconAfter\n      ? html`<vscode-icon\n          name=\"${this.iconAfter}\"\n          class=\"icon-after\"\n        ></vscode-icon>`\n      : nothing;\n\n    return html`\n      <span class=\"${classMap(wrapperClasses)}\">\n        ${iconElem}\n        <slot></slot>\n        ${iconAfterElem}\n      </span>\n    `;\n  }\n}\n\n/* declare global {\n  interface HTMLElementTagNameMap {\n    'vscode-button': VscodeButton;\n  }\n} */\n"]}