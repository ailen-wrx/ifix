{"version":3,"file":"vscode-form-container.js","sourceRoot":"","sources":["../src/vscode-form-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {\r\n  customElement,\r\n  property,\r\n  query,\r\n  queryAssignedNodes,\r\n} from 'lit/decorators.js';\r\nimport {VscElement} from './includes/VscElement';\r\nimport {VscodeCheckbox} from './vscode-checkbox';\r\nimport {VscodeCheckboxGroup} from './vscode-checkbox-group';\r\nimport {VscodeFormGroup, FormGroupVariant} from './vscode-form-group';\r\nimport {VscodeInputbox} from './vscode-inputbox';\r\nimport {VscodeMultiSelect} from './vscode-multi-select';\r\nimport {VscodeRadio} from './vscode-radio';\r\nimport {VscodeRadioGroup} from './vscode-radio-group';\r\nimport {VscodeSingleSelect} from './vscode-single-select';\r\n\r\nenum FormGroupLayout {\r\n  HORIZONTAL = 'horizontal',\r\n  VERTICAL = 'vertical',\r\n}\r\n\r\ntype CheckboxOrRadioGroup = VscodeRadioGroup | VscodeCheckboxGroup;\r\n\r\ntype VscFormWidget =\r\n  | VscodeInputbox\r\n  | VscodeSingleSelect\r\n  | VscodeMultiSelect\r\n  | VscodeCheckbox\r\n  | VscodeRadio;\r\n\r\ninterface FormData {\r\n  [key: string]: string | string[];\r\n}\r\n\r\nconst isInputbox = (el: Element): el is VscodeInputbox => {\r\n  return el.tagName.toLocaleLowerCase() === 'vscode-inputbox';\r\n};\r\n\r\nconst isSingleSelect = (el: Element): el is VscodeSingleSelect => {\r\n  return el.tagName.toLocaleLowerCase() === 'vscode-single-select';\r\n};\r\n\r\nconst isMultiSelect = (el: Element): el is VscodeMultiSelect => {\r\n  return el.tagName.toLocaleLowerCase() === 'vscode-multi-select';\r\n};\r\n\r\nconst isCheckbox = (el: Element): el is VscodeCheckbox => {\r\n  return el.tagName.toLocaleLowerCase() === 'vscode-checkbox';\r\n};\r\n\r\nconst isRadio = (el: Element): el is VscodeRadio => {\r\n  return el.tagName.toLocaleLowerCase() === 'vscode-radio';\r\n};\r\n\r\n@customElement('vscode-form-container')\r\nexport class VscodeFormContainer extends VscElement {\r\n  @property({type: Boolean, reflect: true})\r\n  set responsive(isResponsive: boolean) {\r\n    this._responsive = isResponsive;\r\n\r\n    if (this._firstUpdateComplete) {\r\n      if (isResponsive) {\r\n        this._activateResponsiveLayout();\r\n      } else {\r\n        this._deactivateResizeObserver();\r\n      }\r\n    }\r\n  }\r\n  get responsive(): boolean {\r\n    return this._responsive;\r\n  }\r\n\r\n  @property({type: Number})\r\n  breakpoint = 490;\r\n\r\n  @property({type: Object})\r\n  get data(): FormData {\r\n    return this._collectFormData();\r\n  }\r\n\r\n  private _resizeObserver!: ResizeObserver | null;\r\n\r\n  @query('.wrapper')\r\n  private _wrapperElement!: Element;\r\n\r\n  @queryAssignedNodes()\r\n  private _assignedNodes!: VscodeFormGroup[];\r\n\r\n  private _responsive = false;\r\n\r\n  private _firstUpdateComplete = false;\r\n\r\n  private _currentFormGroupLayout!: FormGroupLayout;\r\n\r\n  private _collectFormData() {\r\n    const query = [\r\n      'vscode-inputbox',\r\n      'vscode-single-select',\r\n      'vscode-multi-select',\r\n      'vscode-checkbox',\r\n      'vscode-radio',\r\n    ].join(',');\r\n    const vscFormWidgets = this.querySelectorAll(\r\n      query\r\n    ) as NodeListOf<VscFormWidget>;\r\n    const data: FormData = {};\r\n\r\n    vscFormWidgets.forEach((widget) => {\r\n      if (!widget.hasAttribute('name')) {\r\n        return;\r\n      }\r\n\r\n      const name = widget.getAttribute('name') as string;\r\n\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      if (isCheckbox(widget) && widget.checked) {\r\n        data[name] = Array.isArray(data[name])\r\n          ? [...data[name], widget.value as string]\r\n          : [widget.value as string];\r\n      } else if (isMultiSelect(widget)) {\r\n        data[name] = widget.value;\r\n      } else if (isCheckbox(widget) && !widget.checked) {\r\n        data[name] = Array.isArray(data[name]) ? data[name] : [];\r\n      } else if (\r\n        (isRadio(widget) && widget.checked) ||\r\n        isInputbox(widget) ||\r\n        isSingleSelect(widget)\r\n      ) {\r\n        data[name] = widget.value;\r\n      } else if (isRadio(widget) && !widget.checked) {\r\n        data[name] = data[name] ? data[name] : '';\r\n      }\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  private _toggleCompactLayout(layout: FormGroupLayout) {\r\n    const formGroups = this._assignedNodes.filter(\r\n      (el) => el.matches && el.matches('vscode-form-group')\r\n    );\r\n\r\n    formGroups.forEach((group) => {\r\n      if (!group.dataset.originalVariant) {\r\n        group.dataset.originalVariant = group.variant;\r\n      }\r\n\r\n      const oVariant = group.dataset.originalVariant as FormGroupVariant;\r\n\r\n      if (layout === FormGroupLayout.VERTICAL && oVariant === 'horizontal') {\r\n        group.variant = 'vertical';\r\n      } else {\r\n        group.variant = oVariant;\r\n      }\r\n\r\n      const checkboxOrRadioGroup = group.querySelectorAll(\r\n        'vscode-checkbox-group, vscode-radio-group'\r\n      ) as NodeListOf<CheckboxOrRadioGroup>;\r\n\r\n      checkboxOrRadioGroup.forEach((widgetGroup) => {\r\n        if (!widgetGroup.dataset.originalVariant) {\r\n          widgetGroup.dataset.originalVariant = widgetGroup.variant;\r\n        }\r\n\r\n        const originalVariant = widgetGroup.dataset.originalVariant;\r\n\r\n        if (\r\n          layout === FormGroupLayout.HORIZONTAL &&\r\n          originalVariant === FormGroupLayout.HORIZONTAL\r\n        ) {\r\n          widgetGroup.variant = 'horizontal';\r\n        } else {\r\n          widgetGroup.variant = 'vertical';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private _resizeObserverCallback(entries: ResizeObserverEntry[]) {\r\n    let wrapperWidth = 0;\r\n\r\n    for (const entry of entries) {\r\n      wrapperWidth = entry.contentRect.width;\r\n    }\r\n\r\n    const nextLayout: FormGroupLayout =\r\n      wrapperWidth < this.breakpoint\r\n        ? FormGroupLayout.VERTICAL\r\n        : FormGroupLayout.HORIZONTAL;\r\n\r\n    if (nextLayout !== this._currentFormGroupLayout) {\r\n      this._toggleCompactLayout(nextLayout);\r\n      this._currentFormGroupLayout = nextLayout;\r\n    }\r\n  }\r\n\r\n  private _resizeObserverCallbackBound =\r\n    this._resizeObserverCallback.bind(this);\r\n\r\n  private _activateResponsiveLayout() {\r\n    this._resizeObserver = new ResizeObserver(\r\n      this._resizeObserverCallbackBound\r\n    );\r\n    this._resizeObserver.observe(this._wrapperElement);\r\n  }\r\n\r\n  private _deactivateResizeObserver() {\r\n    this._resizeObserver?.disconnect();\r\n    this._resizeObserver = null;\r\n  }\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: block;\r\n          max-width: 727px;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  firstUpdated(): void {\r\n    this._firstUpdateComplete = true;\r\n\r\n    if (this._responsive) {\r\n      this._activateResponsiveLayout();\r\n    }\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    return html`\r\n      <div class=\"wrapper\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-form-container': VscodeFormContainer;\r\n  }\r\n}\r\n"]}