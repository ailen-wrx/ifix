{"version":3,"file":"vscode-inputbox.js","sourceRoot":"","sources":["../src/vscode-inputbox.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,GAAG,EAAkB,IAAI,EAAiB,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACxE,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AACvD,OAAO,EAAC,uBAAuB,EAAC,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAEjD,IAAK,QAKJ;AALD,WAAK,QAAQ;IACX,+BAAmB,CAAA;IACnB,yBAAa,CAAA;IACb,+BAAmB,CAAA;IACnB,2BAAe,CAAA;AACjB,CAAC,EALI,QAAQ,KAAR,QAAQ,QAKZ;AAiBD,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,OAAO,GAAG,CAAC,CAAC;AAClB,MAAM,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAM,mBAAmB,GAAG,CAAC,KAAa,EAAE,EAAE;IAC5C,OAAO,YAAY,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC;AAC9D,CAAC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;GAqBG;AAEH,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAgG5C;QACE,KAAK,EAAE,CAAC;QA/FV,UAAK,GAAG,EAAE,CAAC;QAGX,cAAS,GAAG,KAAK,CAAC;QAGlB,YAAO,GAAG,EAAE,CAAC;QAsBb;;;WAGG;QAEH,eAAU,GAAG,KAAK,CAAC;QAEnB;;;;WAIG;QAEH,SAAI,GAAc,MAAM,CAAC;QAGzB,YAAO,GAAG,KAAK,CAAC;QAGhB,UAAK,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAG,EAAE,CAAC;QAGjB,UAAK,GAAG,CAAC,CAAC;QAGV,aAAQ,GAAG,CAAC,CAAC;QAGb,QAAG,GAAuB,SAAS,CAAC;QAGpC,cAAS,GAAuB,SAAS,CAAC;QAG1C,QAAG,GAAuB,SAAS,CAAC;QAGpC,cAAS,GAAuB,SAAS,CAAC;QAG1C,aAAQ,GAAG,KAAK,CAAC;QAGjB,aAAQ,GAAG,KAAK,CAAC;QAGjB,SAAI,GAAuB,SAAS,CAAC;QAY7B,oBAAe,GAAG,CAAC,CAAC;QAGpB,2BAAsB,GAAG,KAAK,CAAC;QAgC/B,iBAAY,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC;QAEM,gBAAW,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;QAEM,iBAAY,GAAG,CAAC,KAAiB,EAAE,EAAE;YAC3C,MAAM,WAAW,GAA2C,KAAK,CAAC,MAAM,CAAC;YAEzE,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAE/B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,WAAW,EAAE;gBAC3B,MAAM,EAAE,WAAW,CAAC,KAAK;gBACzB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC,CAAC;QAEM,kBAAa,GAAG,CAAC,KAAiB,EAAE,EAAE;YAC5C,MAAM,WAAW,GAA2C,KAAK,CAAC,MAAM,CAAC;YAEzE,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,YAAY,EAAE;gBAC5B,MAAM,EAAE,WAAW,CAAC,KAAK;gBACzB,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC;QAEM,wBAAmB,GAAG,CAAC,KAAiB,EAAE,EAAE;YAClD,MAAM,EAAE,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACxC,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;YACxB,MAAM,eAAe,GAAG,EAAE,CAAC;YAE3B,IAAI,CAAC,sBAAsB;gBACzB,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK;oBACvB,CAAC,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,GAAG,eAAe,GAAG,YAAY,GAAG,CAAC,CAAC;YAE/D,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;QAEM,6BAAwB,GAAG,GAAS,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACxC,OAAO;aACR;YAED,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;YAE1D,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;aAC3E;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;aAC/B;QACH,CAAC,CAAC;QAzFA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;IACpC,CAAC;IAxFD,IAAI,QAAQ,CAAC,GAAW;QACtB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAE9B,QAAQ,GAAG,EAAE;YACX,KAAK,QAAQ,CAAC,IAAI,CAAC;YACnB,KAAK,QAAQ,CAAC,OAAO,CAAC;YACtB,KAAK,QAAQ,CAAC,KAAK;gBACjB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,MAAM;YACR;gBACE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;SACrC;QAED,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAyED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,OAAO,CACL,iBAAqE;QAErE,IAAI,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;IACH,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,OAAO,yBAAyB,CAAC;IACnC,CAAC;IAiED,MAAM,KAAK,MAAM;QACf,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAiFgB,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAuGvB,uBAAuB;;;;;;;;OAQzC;SACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,MAAM,SAAS,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErD,MAAM,cAAc,GAAG,QAAQ,CAAC;YAC9B,SAAS,EAAE,GAAG,SAAS,IAAI;YAC3B,SAAS,EAAE,GAAG,SAAS,IAAI;SAC5B,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,QAAQ,CAAC;YAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,IAAI;SACpC,CAAC,CAAC;QACH,MAAM,gBAAgB,GAAG,QAAQ,CAAC;YAChC,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,OAAO;YAC5C,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;QACH,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK;YAChC,CAAC,CAAC,IAAI,CAAC,KAAK;iBACP,KAAK,CAAC,IAAI,CAAC;iBACX,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACZ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA,mBAAmB,CAC1D;YACL,CAAC,CAAC,IAAI,CAAA,QAAQ,CAAC;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAA;;kBAEP,IAAI,CAAC,YAAY;iBAClB,IAAI,CAAC,WAAW;kBACf,IAAI,CAAC,YAAY;mBAChB,IAAI,CAAC,aAAa;sBACf,IAAI,CAAC,mBAAmB;iBAC7B,QAAQ,CAAC;YAChB,gBAAgB,EAAE,IAAI,CAAC,sBAAsB;YAC7C,eAAe,EAAE,IAAI;SACtB,CAAC;qBACW,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;qBACzB,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;uBACvB,IAAI,CAAC,WAAW;qBAClB,IAAI,CAAC,QAAQ;iBACjB,cAAc;kBACb,IAAI,CAAC,KAAK;;6CAEiB,cAAc;UACjD,eAAe;;KAEpB,CAAC;QACF,MAAM,KAAK,GAAG,IAAI,CAAA;;gBAEN,IAAI,CAAC,IAAI;kBACP,IAAI,CAAC,YAAY;iBAClB,IAAI,CAAC,WAAW;kBACf,IAAI,CAAC,YAAY;mBAChB,IAAI,CAAC,aAAa;uBACd,IAAI,CAAC,WAAW;eACxB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;qBACb,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;eAC/B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;qBACb,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;qBACzB,IAAI,CAAC,QAAQ;qBACb,IAAI,CAAC,QAAQ;gBAClB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;kBAClB,IAAI,CAAC,KAAK;;;KAGvB,CAAC;QAEF,MAAM,OAAO,GAAG,IAAI,CAAA;4BACI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO;KACrD,CAAC;QAEF,OAAO,IAAI,CAAA;oBACK,gBAAgB;;;YAGxB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;;;KAGvE,CAAC;IACJ,CAAC;CACF,CAAA;AAjdC;IADC,QAAQ,EAAE;6CACA;AAGX;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;iDACR;AAGlB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;+CACZ;AAGb;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;8CAexB;AAUD;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;kDACP;AAQnB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACA;AAGzB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;+CACzB;AAGhB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;6CACd;AAGX;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mDACR;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;6CACf;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;gDACZ;AAGb;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;2CACW;AAGpC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDACiB;AAG1C;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;2CACW;AAGpC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDACiB;AAG1C;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;gDACT;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;gDACT;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACY;AAMrC;IADC,KAAK,CAAC,mBAAmB,CAAC;mDACU;AAGrC;IADC,KAAK,CAAC,gBAAgB,CAAC;qDACuC;AAG/D;IADC,KAAK,EAAE;uDACoB;AA3FjB,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAmd1B;SAndY,cAAc","sourcesContent":["import {css, CSSResultGroup, html, TemplateResult} from 'lit';\r\nimport {customElement, property, query, state} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport {ifDefined} from 'lit/directives/if-defined.js';\r\nimport {INPUT_LINE_HEIGHT_RATIO} from './includes/helpers';\r\nimport {VscElement} from './includes/VscElement';\r\n\r\nenum Severity {\r\n  DEFAULT = 'default',\r\n  INFO = 'info',\r\n  WARNING = 'warning',\r\n  ERROR = 'error',\r\n}\r\n\r\ntype InputType =\r\n  | 'color'\r\n  | 'date'\r\n  | 'datetime-local'\r\n  | 'email'\r\n  | 'file'\r\n  | 'month'\r\n  | 'number'\r\n  | 'password'\r\n  | 'tel'\r\n  | 'text'\r\n  | 'time'\r\n  | 'url'\r\n  | 'week';\r\n\r\nconst LINE_HEIGHT = 17;\r\nconst PADDING = 4;\r\nconst BORDER_WIDTH = 1;\r\n\r\nconst calcHeightFromLines = (lines: number) => {\r\n  return BORDER_WIDTH * 2 + PADDING * 2 + lines * LINE_HEIGHT;\r\n};\r\n\r\n/**\r\n * @attr {narrow|wide} variant - The sizes are borrowed from the VSCode settings page. The narrow size is typically used for the numeric values and the wide size for the text.\r\n * @attr name - Name which is used as a variable name in the data of the form-container.\r\n *\r\n * @cssprop --vscode-scrollbarSlider-background\r\n * @cssprop --vscode-scrollbarSlider-hoverBackground\r\n * @cssprop --vscode-scrollbarSlider-activeBackground\r\n * @cssprop --vscode-input-background\r\n * @cssprop --vscode-settings-textInputBorder\r\n * @cssprop --vscode-input-foreground\r\n * @cssprop --vscode-input-placeholderForeground\r\n * @cssprop --vscode-focusBorder\r\n * @cssprop --vscode-panelInput-border\r\n * @cssprop --vscode-focusBorder\r\n * @cssprop --vscode-inputValidation-infoBackground\r\n * @cssprop --vscode-inputValidation-infoBorder\r\n * @cssprop --vscode-inputValidation-warningBackground\r\n * @cssprop --vscode-inputValidation-warningBorder\r\n * @cssprop --vscode-inputValidation-errorBackground\r\n * @cssprop --vscode-inputValidation-errorBorder\r\n * @cssprop --vscode-editor-background\r\n */\r\n@customElement('vscode-inputbox')\r\nexport class VscodeInputbox extends VscElement {\r\n  @property()\r\n  label = '';\r\n\r\n  @property({type: Boolean})\r\n  multiline = false;\r\n\r\n  @property({type: String})\r\n  message = '';\r\n\r\n  @property({type: String})\r\n  set severity(val: string) {\r\n    const oldVal = this._severity;\r\n\r\n    switch (val) {\r\n      case Severity.INFO:\r\n      case Severity.WARNING:\r\n      case Severity.ERROR:\r\n        this._severity = val;\r\n        break;\r\n      default:\r\n        this._severity = Severity.DEFAULT;\r\n    }\r\n\r\n    this.requestUpdate('messageSeverity', oldVal);\r\n  }\r\n  get severity(): string {\r\n    return this._severity;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @attr panelInput\r\n   */\r\n  @property({type: Boolean})\r\n  panelInput = false;\r\n\r\n  /**\r\n   * Text-like input types\r\n   * @attr type\r\n   * @type {\"color\"|\"date\"|\"datetime-local\"|\"email\"|\"file\"|\"month\"|\"number\"|\"password\"|\"tel\"|\"text\"|\"time\"|\"url\"|\"week\"}\r\n   */\r\n  @property({type: String})\r\n  type: InputType = 'text';\r\n\r\n  @property({type: Boolean, reflect: true})\r\n  focused = false;\r\n\r\n  @property({type: String})\r\n  value = '';\r\n\r\n  @property({type: String})\r\n  placeholder = '';\r\n\r\n  @property({type: Number})\r\n  lines = 2;\r\n\r\n  @property({type: Number})\r\n  maxLines = 5;\r\n\r\n  @property({type: Number})\r\n  min: number | undefined = undefined;\r\n\r\n  @property({type: Number})\r\n  minLength: number | undefined = undefined;\r\n\r\n  @property({type: Number})\r\n  max: number | undefined = undefined;\r\n\r\n  @property({type: Number})\r\n  maxLength: number | undefined = undefined;\r\n\r\n  @property({type: Boolean})\r\n  multiple = false;\r\n\r\n  @property({type: Boolean})\r\n  readonly = false;\r\n\r\n  @property({type: Number})\r\n  step: number | undefined = undefined;\r\n\r\n  /* @property({reflect: true, type: Number})\r\n  tabindex = 0; */\r\n\r\n  @query('.content-measurer')\r\n  private _measurerEl!: HTMLDivElement;\r\n\r\n  @query('.input-element')\r\n  private _inputElement!: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n  @state()\r\n  private _textareaHeight = 0;\r\n\r\n  private _severity: Severity;\r\n  private _textareaDefaultCursor = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this._severity = Severity.DEFAULT;\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    this.resizeTextareaIfRequired();\r\n  }\r\n\r\n  updated(\r\n    changedProperties: Map<string, undefined | string | boolean | number>\r\n  ): void {\r\n    if (changedProperties.has('value')) {\r\n      this.resizeTextareaIfRequired();\r\n    }\r\n  }\r\n\r\n  get focusElement(): HTMLInputElement | HTMLTextAreaElement {\r\n    return this._inputElement;\r\n  }\r\n\r\n  focus(): void {\r\n    this._inputElement.focus();\r\n  }\r\n\r\n  toString(): string {\r\n    return '[object VscodeInputbox]';\r\n  }\r\n\r\n  private onInputFocus = () => {\r\n    this.focused = true;\r\n  };\r\n\r\n  private onInputBlur = () => {\r\n    this.focused = false;\r\n  };\r\n\r\n  private onInputInput = (event: InputEvent) => {\r\n    const eventTarget = <HTMLInputElement | HTMLTextAreaElement>event.target;\r\n\r\n    this.value = eventTarget.value;\r\n\r\n    this.dispatchEvent(\r\n      new CustomEvent('vsc-input', {\r\n        detail: eventTarget.value,\r\n        bubbles: true,\r\n        composed: true,\r\n      })\r\n    );\r\n\r\n    this.resizeTextareaIfRequired();\r\n  };\r\n\r\n  private onInputChange = (event: InputEvent) => {\r\n    const eventTarget = <HTMLInputElement | HTMLTextAreaElement>event.target;\r\n\r\n    this.dispatchEvent(\r\n      new CustomEvent('vsc-change', {\r\n        detail: eventTarget.value,\r\n        bubbles: true,\r\n        composed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  private onTextareaMouseMove = (event: MouseEvent) => {\r\n    const br = this.getBoundingClientRect();\r\n    const x = event.clientX;\r\n    const SCROLLBAR_WIDTH = 10;\r\n\r\n    this._textareaDefaultCursor =\r\n      x <= br.left + br.width &&\r\n      x >= br.left + br.width - SCROLLBAR_WIDTH - BORDER_WIDTH * 2;\r\n\r\n    this.requestUpdate();\r\n  };\r\n\r\n  private resizeTextareaIfRequired = (): void => {\r\n    if (!this._measurerEl || !this.multiline) {\r\n      return;\r\n    }\r\n\r\n    const {height} = this._measurerEl.getBoundingClientRect();\r\n\r\n    if (height === 0) {\r\n      this._textareaHeight = calcHeightFromLines(this.lines);\r\n      this._measurerEl.style.minHeight = `${calcHeightFromLines(this.lines)}px`;\r\n    } else {\r\n      this._textareaHeight = height;\r\n    }\r\n  };\r\n\r\n  static get styles(): CSSResultGroup {\r\n    return [\r\n      super.styles,\r\n      css`\r\n        :host {\r\n          display: inline-block;\r\n          max-width: 100%;\r\n          width: 320px;\r\n        }\r\n\r\n        :host([size-variant='narrow']) {\r\n          width: 200px;\r\n        }\r\n\r\n        :host([size-variant='wide']) {\r\n          width: 500px;\r\n        }\r\n\r\n        .container {\r\n          position: relative;\r\n        }\r\n\r\n        .cursor-default {\r\n          cursor: default;\r\n        }\r\n\r\n        textarea {\r\n          left: 0;\r\n          overflow: visible;\r\n          position: absolute;\r\n          resize: none;\r\n          top: 0;\r\n        }\r\n\r\n        .content-measurer::-webkit-scrollbar,\r\n        textarea::-webkit-scrollbar {\r\n          cursor: default;\r\n          width: 10px;\r\n        }\r\n\r\n        .content-measurer::-webkit-scrollbar-button,\r\n        textarea::-webkit-scrollbar-button {\r\n          display: none;\r\n        }\r\n\r\n        textarea::-webkit-scrollbar-track {\r\n          background-color: transparent;\r\n          width: 10px;\r\n        }\r\n\r\n        .content-measurer::-webkit-scrollbar-track {\r\n          width: 10px;\r\n        }\r\n\r\n        textarea::-webkit-scrollbar-thumb {\r\n          background-color: transparent;\r\n        }\r\n\r\n        textarea:hover::-webkit-scrollbar-thumb {\r\n          background-color: var(--vscode-scrollbarSlider-background);\r\n        }\r\n\r\n        textarea:hover::-webkit-scrollbar-thumb:hover {\r\n          background-color: var(--vscode-scrollbarSlider-hoverBackground);\r\n        }\r\n\r\n        textarea:hover::-webkit-scrollbar-thumb:active {\r\n          background-color: var(--vscode-scrollbarSlider-activeBackground);\r\n        }\r\n\r\n        input,\r\n        textarea {\r\n          background-color: var(--vscode-input-background);\r\n          border-color: var(\r\n            --vscode-settings-textInputBorder,\r\n            rgba(0, 0, 0, 0)\r\n          );\r\n          border-style: solid;\r\n          border-width: 1px;\r\n          box-sizing: border-box;\r\n          color: var(--vscode-input-foreground);\r\n          display: block;\r\n          font-family: var(--vscode-font-family);\r\n          font-size: var(--vscode-font-size);\r\n          line-height: ${INPUT_LINE_HEIGHT_RATIO};\r\n          outline: none;\r\n          padding: 4px;\r\n          width: 100%;\r\n        }\r\n\r\n        input::placeholder,\r\n        textarea::placeholder {\r\n          color: var(--vscode-input-placeholderForeground);\r\n        }\r\n\r\n        input::selection,\r\n        textarea::selection {\r\n          background-color: var(--vscode-editor-selectionBackground);\r\n        }\r\n\r\n        input:focus,\r\n        textarea:focus {\r\n          border-color: var(--vscode-focusBorder);\r\n        }\r\n\r\n        .container.panel-input input,\r\n        .container.panel-input textarea {\r\n          border-color: var(--vscode-panelInput-border);\r\n        }\r\n\r\n        .container.default input,\r\n        .container.default textarea,\r\n        .container.panel-input.default input,\r\n        .container.panel-input.default textarea {\r\n          border-color: var(--vscode-focusBorder);\r\n        }\r\n\r\n        .container.info input,\r\n        .container.info textarea,\r\n        .container.panel-input.info input,\r\n        .container.panel-input.info textarea {\r\n          border-color: var(--vscode-inputValidation-infoBorder);\r\n        }\r\n\r\n        .container.warning input,\r\n        .container.warning textarea,\r\n        .container.panel-input.warning input,\r\n        .container.panel-input.warning textarea {\r\n          border-color: var(--vscode-inputValidation-warningBorder);\r\n        }\r\n\r\n        .container.error input,\r\n        .container.error textarea,\r\n        .container.panel-input.error input,\r\n        .container.panel-input.error textarea {\r\n          border-color: var(--vscode-inputValidation-errorBorder);\r\n        }\r\n\r\n        .message {\r\n          border-style: solid;\r\n          border-width: 1px;\r\n          box-sizing: border-box;\r\n          display: none;\r\n          font-size: 12px;\r\n          line-height: 17px;\r\n          margin-top: -1px;\r\n          overflow: hidden;\r\n          padding: 0.4em;\r\n          position: absolute;\r\n          user-select: none;\r\n          top: 100%;\r\n          text-align: left;\r\n          width: 100%;\r\n          word-wrap: break-word;\r\n        }\r\n\r\n        .focused:not(.default) .message {\r\n          display: block;\r\n        }\r\n\r\n        .message.default {\r\n          background-color: var(--vscode-editor-background);\r\n          border-color: var(--vscode-focusBorder);\r\n        }\r\n\r\n        .message.info {\r\n          background-color: var(--vscode-inputValidation-infoBackground);\r\n          border-color: var(--vscode-inputValidation-infoBorder);\r\n        }\r\n\r\n        .message.warning {\r\n          background-color: var(--vscode-inputValidation-warningBackground);\r\n          border-color: var(--vscode-inputValidation-warningBorder);\r\n        }\r\n\r\n        .message.error {\r\n          background-color: var(--vscode-inputValidation-errorBackground);\r\n          border-color: var(--vscode-inputValidation-errorBorder);\r\n        }\r\n\r\n        .content-measurer {\r\n          background-color: green;\r\n          border: 1px solid transparent;\r\n          box-sizing: border-box;\r\n          font-family: var(--vscode-font-family);\r\n          font-size: var(--vscode-font-size);\r\n          left: 0;\r\n          line-height: ${INPUT_LINE_HEIGHT_RATIO};\r\n          overflow: auto;\r\n          padding: 4px;\r\n          text-align: left;\r\n          top: 0;\r\n          visibility: hidden;\r\n          word-break: break-all;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  render(): TemplateResult {\r\n    const minHeight = calcHeightFromLines(this.lines);\r\n    const maxHeight = calcHeightFromLines(this.maxLines);\r\n\r\n    const measurerStyles = styleMap({\r\n      minHeight: `${minHeight}px`,\r\n      maxHeight: `${maxHeight}px`,\r\n    });\r\n    const textareaStyles = styleMap({\r\n      height: `${this._textareaHeight}px`,\r\n    });\r\n    const containerClasses = classMap({\r\n      container: true,\r\n      severity: this.severity !== Severity.DEFAULT,\r\n      focused: this.focused,\r\n    });\r\n    const measurerContent = this.value\r\n      ? this.value\r\n          .split('\\n')\r\n          .map((line) =>\r\n            line ? html`<div>${line}</div>` : html`<div>&nbsp;</div>`\r\n          )\r\n      : html`&nbsp;`;\r\n\r\n    const textarea = html`\r\n      <textarea\r\n        @focus=\"${this.onInputFocus}\"\r\n        @blur=\"${this.onInputBlur}\"\r\n        @input=\"${this.onInputInput}\"\r\n        @change=\"${this.onInputChange}\"\r\n        @mousemove=\"${this.onTextareaMouseMove}\"\r\n        class=\"${classMap({\r\n          'cursor-default': this._textareaDefaultCursor,\r\n          'input-element': true,\r\n        })}\"\r\n        minlength=\"${ifDefined(this.minLength)}\"\r\n        maxlength=\"${ifDefined(this.maxLength)}\"\r\n        placeholder=\"${this.placeholder}\"\r\n        ?readonly=\"${this.readonly}\"\r\n        style=\"${textareaStyles}\"\r\n        .value=\"${this.value}\"\r\n      ></textarea>\r\n      <div class=\"content-measurer\" style=\"${measurerStyles}\">\r\n        ${measurerContent}\r\n      </div>\r\n    `;\r\n    const input = html`\r\n      <input\r\n        type=\"${this.type}\"\r\n        @focus=\"${this.onInputFocus}\"\r\n        @blur=\"${this.onInputBlur}\"\r\n        @input=\"${this.onInputInput}\"\r\n        @change=\"${this.onInputChange}\"\r\n        placeholder=\"${this.placeholder}\"\r\n        min=\"${ifDefined(this.min)}\"\r\n        minlength=\"${ifDefined(this.minLength)}\"\r\n        max=\"${ifDefined(this.max)}\"\r\n        maxlength=\"${ifDefined(this.maxLength)}\"\r\n        ?multiple=\"${this.multiple}\"\r\n        ?readonly=\"${this.readonly}\"\r\n        step=\"${ifDefined(this.step)}\"\r\n        .value=\"${this.value}\"\r\n        class=\"input-element\"\r\n      />\r\n    `;\r\n\r\n    const message = html`\r\n      <div class=\"message ${this.severity}\">${this.message}</div>\r\n    `;\r\n\r\n    return html`\r\n      <div class=\"${containerClasses}\">\r\n        <div class=\"helper\"><slot name=\"helper\"></slot></div>\r\n        <div class=\"input-wrapper\">\r\n          ${this.multiline ? textarea : input} ${this.message ? message : ''}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'vscode-inputbox': VscodeInputbox;\r\n  }\r\n}\r\n"]}